<!-- auto-generate scripting documentation (kwrite-devel@kde.org Re: [kate] doc/kate: document most of the new scripts in 4.10) -->
<chapter id="dev">
<chapterinfo>
<authorgroup>
<author
>&TC.Hollingsworth; &TC.Hollingsworth.mail;</author>
&traductor.Antoni.Bella; 
</authorgroup>
</chapterinfo>
<title
>Estendre la &katepart;</title>

<sect1 id="dev-intro">
<title
>Introducció</title>

<para
>Igual que qualsevol editor de text avançat, la &katepart; ofereix una varietat de maneres d'estendre la seva funcionalitat. Podeu <link linkend="dev-scripting"
>escriure scripts senzills per afegir funcionalitat amb JavaScript</link
>. Finalment, un cop estengueu la &katepart;, sereu benvingut a <ulink url="http://kate-editor.org/join-us/"
>unir-vos</ulink
> amb nosaltres i compartir les vostres millores amb el món!</para>

</sect1>

<sect1 id="highlight">
<title
>Treballar amb el ressaltat de la sintaxi</title>

<sect2 id="highlight-overview">

<title
>Vista general</title>

<para
>El ressaltat de la sintaxi és el que fa que l'editor mostri automàticament text en diferents estils/colors, depenent de la funció de la cadena en relació al propòsit del fitxer. En el codi font d'un programa, per exemple, les sentències de control es poden presentar en negreta, mentre que els tipus de dades i els comentaris poden tenir diferents colors que la resta del text. Això millora considerablement la llegibilitat del text, i ajuda a l'autor a ser més eficient i productiu.</para>

<mediaobject>
<imageobject
><imagedata format="PNG" fileref="highlighted.png"/></imageobject>
<textobject
><phrase
>Una funció de Perl, presentada amb ressaltat de la sintaxi.</phrase
></textobject>
<caption
><para
>Una funció de Perl, presentada amb ressaltat de la sintaxi.</para>
</caption>
</mediaobject>

<mediaobject>
<imageobject
><imagedata format="PNG" fileref="unhighlighted.png"/></imageobject>
<textobject
><phrase
>La mateixa funció de Perl, sense ressaltat.</phrase
></textobject>
<caption
><para
>La mateixa funció de Perl, sense ressaltat.</para
></caption>
</mediaobject>

<para
>Dels dos exemples, quin resulta més fàcil de llegir?</para>

<para
>La &kappname; compta amb un sistema de ressaltat de sintaxi flexible, configurable i capaç, la distribució estàndard proveeix definicions per a una gran varietat de llenguatges de programació, creació de scripts i de marques. A més podeu proveir les vostres pròpies definicions en simples fitxers &XML;.</para>

<para
>La &kappname; detectarà automàticament les regles de la sintaxi correctes quan obriu un fitxer, basant-se en el tipus &MIME; del fitxer, determinat per la seva extensió, o, si no en té, pel seu contingut. Si l'elecció no és la correcta, podreu establir-la manualment des del menú <menuchoice
><guimenu
>Eines</guimenu
><guisubmenu
>Ressaltat</guisubmenu
></menuchoice
>.</para>

<para
>Els estils i colors emprats per a cada definició de ressaltat de sintaxi es poden configurar utilitzant la pestanya <link linkend="prefcolors-highlighting-text-styles"
>Estils del text ressaltat</link
> del <link linkend="config-dialog"
>Diàleg de configuració</link
>, mentre que els tipus &MIME; i extensions de fitxer per als que s'hauran d'utilitzar, es poden gestionar utilitzant la pàgina <link linkend="pref-open-save-modes-filetypes"
>Modes i tipus de fitxers</link
>.</para>

<note>
<para
>El ressaltat de la sintaxi té el seu ús en la millora de la llegibilitat del text, però no podeu confiar-hi per a validar que el text és correcte. Marcar el text en funció de la seva sintaxi pot ser difícil, depenent del format que s'estigui emprant, i en alguns casos els autors de les regles de la sintaxi poden estar orgullosos si es processa correctament el 98% del text, si bé caldrà un estil molt rar per a veure el 2% incorrecte.</para>
</note>

<tip>
<para
>Podeu baixar actualitzacions o definicions addicionals del ressaltat de la sintaxi des del lloc web de la &kappname; fent clic en el botó <guibutton
>Baixa els fitxers de ressaltat...</guibutton
> a la pestanya <link linkend="pref-open-save-modes-filetypes"
>Modes i tipus de fitxers</link
> del <link linkend="config-dialog"
>diàleg de configuració</link
>.</para>
</tip>

</sect2>

<sect2 id="katehighlight-system">

<title
>El sistema de ressaltat de la sintaxi de la &kappname;</title>

<para
>Aquesta secció tractarà sobre el mecanisme de ressaltat de la sintaxi de la &kappname; amb més detall. Recomanem la seva lectura si voleu aprendre sobre seu, o si voleu crear o canviar les definicions de la sintaxi.</para>

<sect3 id="katehighlight-howitworks">

<title
>Com funciona</title>

<para
>Sempre que obriu un fitxer, una de les primeres coses que fa l'editor de la &kappname; és detectar quina definició de la sintaxi s'emprarà per al fitxer. Mentre va llegint el text del fitxer, i mentre hi va escrivint, el sistema de ressaltat de la sintaxi analitza el text utilitzant les regles establertes per la definició de la sintaxi i marcant a on comencen i acaben els diferents contexts i estils.</para>

<para
>Quan escriviu en el document, el text nou és analitzat i marcat al vol, de manera que si suprimiu un caràcter que marca el començament o el final d'un context, l'estil del text adjacent canviarà en conseqüència.</para>

<para
>Les definicions de la sintaxi utilitzades pel sistema de ressaltat de la sintaxi de la &kappname; són fitxers &XML;, que contenen <itemizedlist>
<listitem
><para
>Regles per a detectar el paper del text, organitzades en blocs segons el context</para
></listitem>
<listitem
><para
>Llistes de paraules clau</para
></listitem>
<listitem
><para
>Definicions dels elements d'estil</para
></listitem>
</itemizedlist>
</para>

<para
>Quan s'analitza el text, les regles de detecció són avaluades en l'ordre en el que estan definides, i si el començament de la cadena actual coincideix amb la regla, s'utilitzarà el context relacionat. El punt d'inici del text es mou al punt final en el que la regla coincideix i comença un nou cicle de regles, començant en el context establert per la regla coincident.</para>

</sect3>

<sect3 id="highlight-system-rules">
<title
>Regles</title>

<para
>Les regles de la detecció són el nucli del sistema de detecció del ressaltat. Una regla és una cadena, un caràcter o una <link linkend="regular-expressions"
>expressió regular</link
> contra la que haurà de coincidir el text que s'està analitzant. Conté informació sobre l'estil a emprar per a la part coincident del text. Es pot canviar el context de treball del sistema, ja sigui cap a un context mencionat explícitament o cap a l'anterior context emprat pel text.</para>

<para
>Les regles s'organitzen en grups de context. Un grup de context s'utilitza per als conceptes del text principal dins del format, per exemple, les cadenes de text entre cometes o els blocs de comentaris en el codi font d'un programa. Això garanteix que el sistema de ressaltat no necessita realitzar un cicle per a totes les regles quan no és necessari, i que algunes seqüències de caràcters del text es poden tractar de forma diferent depenent del context actual. </para>

<para
>En les regles és possible generar contexts dinàmicament per a permetre l'ús de dades específiques d'una instància.</para>

</sect3>

<sect3 id="highlight-context-styles-keywords">
<title
>Estils i paraules clau del context</title>

<para
>En alguns llenguatges de programació, els nombres enters són tractats pel compilador (el programa que converteix el codi font en un executable binari) d'una forma diferent dels de coma flotant, i poden haver-hi caràcters que tinguin un significat especial dins d'una cadena entre cometes. En aquests casos, té sentit processar-los de diferent manera que el text adjacent, perquè resultin fàcils d'identificar. De manera que si no representen contexts especials, poden ser vistos com a tals pel sistema de ressaltat de la sintaxi, així que són marcats per a un processat diferent.</para>

<para
>Una definició de la sintaxi pot contenir tants estils com siguin requerits per a cobrir tots els conceptes del format per al que s'utilitza.</para>

<para
>En molts formats hi ha llistes de paraules que representen un concepte específic. Per exemple, en els llenguatges de programació, les sentències de control són un concepte, els noms de tipus de dades un altre, i les funcions incloses en el llenguatge són un tercer. El sistema de ressaltat de la sintaxi de la &kappname; pot utilitzar aquestes llistes per a detectar i marcar paraules en el text per emfatitzar conceptes dels formats del text.</para>

</sect3>

<sect3 id="kate-highlight-system-default-styles">
<title
>Estils per omissió</title>

<para
>Si obriu un fitxer de codi font en C++, un fitxer de codi font en &Java; i un document en <acronym
>HTML</acronym
> a la &kappname;, podreu comprovar que tot i que els formats són diferents, i per tant les paraules que reben un tractament especial també són diferents, els colors emprats són els mateixos. Això és perquè la &kappname; té una llista per omissió d'estils per omissió, que s'empren en les definicions de la sintaxi individuals.</para>

<para
>Això facilita reconèixer conceptes similars en diferents formats de text. Per exemple, els comentaris estan presents en pràcticament qualsevol llenguatge de programació, creació de scripts o de marques, i si es presenten utilitzant el mateix estil en tots els llenguatges, no haureu de parar-vos a pensar i identificar la seva posició en el text.</para>

<tip>
<para
>Tots els estils de definició de la sintaxi utilitzen un dels estils per omissió. Hi ha poques definicions de la sintaxi que utilitzin més estils dels que hi ha per omissió, així que, si empreu un format molt sovint, potser val la pena obrir el diàleg de configuració per a veure si alguns conceptes estan emprant el mateix estil. Per exemple, tan sols hi ha un estil per omissió per a les cadenes, però com el llenguatge de programació Perl utilitza dos tipus de cadena, podeu millorar el ressaltat configurant ambdues de forma lleugerament diferent. Més endavant s'explicaran tots els <link linkend="kate-highlight-default-styles"
>estils per omissió disponibles</link
>.</para>
</tip>

</sect3>

</sect2>

<sect2 id="katehighlight-xml-format">
<title
>El format &XML; per a la definició del ressaltat</title>

<sect3>
<title
>Vista general</title>

<para
>El &kappname; utilitza l'entorn de treball per al ressaltat de la sintaxi dels &kde-frameworks;. Els fitxers XML per omissió del ressaltat distribuïts enviats amb el &kappname; són compilats dintre de la biblioteca de ressaltat de la sintaxi. </para>

<para
>Aquesta secció és una introducció al format &XML; per a la definició del ressaltat. Descriu els components principals, el seu significat i utilització. La següent secció entra en detalls amb les regles de la detecció.</para>

<para
>La definició formal, també coneguda com la <acronym
>XSD</acronym
> es troba al <ulink url="https://commits.kde.org/syntax-highlighting?path=data/schema"
>repositori del ressaltat de la sintaxi</ulink
> al fitxer <filename
>language.xsd</filename
> </para>

<para
>Els fitxers <filename class="extension"
>.xml</filename
> personalitzats per a la definició del ressaltat es troben a <filename class="directory"
>org.kde.syntax-highlighting/syntax/</filename
> a la carpeta d'usuari que trobareu amb <userinput
><command
>qtpaths</command
><option
>--paths GenericDataLocation</option
></userinput
> que normalment és <filename class="directory"
><envar
>$HOME</envar
>/.local/share</filename
> </para>

<para
>Al &Windows; aquests fitxers es troben a <filename
>%USERPROFILE%/AppData/Local/org.kde.syntax-highlighting/syntax</filename
>. <replaceable
>%USERPROFILE%</replaceable
> que generalment s'expandeix a <filename
>C:\\Users\\<replaceable
>usuari</replaceable
></filename
>.</para>

<variablelist>
<title
>Principals seccions dels fitxers per a la definició del ressaltat de la &kappname;</title>

<varlistentry>
<term
>Tots els fitxers de ressaltat contenen una capçalera que estableix la versió XML:</term>
<listitem>
<programlisting
>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
</programlisting>
</listitem>
</varlistentry>

<varlistentry>
<term
>La part principal del fitxer de la definició és l'element <userinput
>language</userinput
>. Els atributs disponibles són:</term>

<listitem>
<para
>Atributs requerits:</para>
<para
><userinput
>name</userinput
> estableix el nom del llenguatge. Després apareixerà als menús i als diàlegs.</para>
<para
><userinput
>section</userinput
> especifica la categoria.</para>
<para
><userinput
>extensions</userinput
> defineix les extensions dels fitxers, com &quot;*.cpp;*.h&quot;</para>
<para
><userinput
>version</userinput
> especifica la versió actual del fitxer de definició en termes d'un nombre enter. Sempre que es canvia un fitxer de definició del ressaltat, assegureu-vos d'augmentar aquest número.</para>
<para
><userinput
>kateversion</userinput
> especifica l'última versió implementada de la &kappname;.</para>

<para
>Atributs opcionals:</para>
<para
><userinput
>mimetype</userinput
> fitxers associats amb el tipus &MIME;.</para>
<para
><userinput
>casesensitive</userinput
> defineix quan les paraules clau són o no sensibles a majúscules i minúscules.</para>
<para
><userinput
>priority</userinput
> és necessària si una altra definició de ressaltat utilitza les mateixes extensions. S'emprarà la de major prioritat.</para>
<para
><userinput
>author</userinput
> conté el nom de l'autor i la seva adreça de correu electrònic.</para>
<para
><userinput
>license</userinput
> conté la llicència, normalment la llicència del MIT per a fitxers nous de ressaltat de la sintaxi.</para>
<para
><userinput
>style</userinput
> conté el llenguatge proporcionat i és utilitzat pels sagnadors per a l'atribut <literal
>required-syntax-style</literal
>.</para>
<para
><userinput
>hidden</userinput
> defineix quan hauria d'aparèixer el nom en els menús de la &kappname;.</para>
<para
>De manera que la línia següent pot tenir un aspecte similar a:</para>
<programlisting
>&lt;language name=&quot;C++&quot; version=&quot;1&quot; kateversion=&quot;2.4&quot; section=&quot;Sources&quot; extensions=&quot;*.cpp;*.h&quot; /&gt;
</programlisting>
</listitem>
</varlistentry>


<varlistentry>
<term
>A continuació estaria l'element <userinput
>highlighting</userinput
>, el qual conté l'element opcional <userinput
>list</userinput
> i els elements requerits <userinput
>contexts</userinput
> i <userinput
>itemDatas</userinput
>.</term>
<listitem>
<para
>Els elements <userinput
>list</userinput
> contenen una llista de paraules clau. En aquest cas les paraules clau són <emphasis
>class</emphasis
> i <emphasis
>const</emphasis
>. Podeu afegir tantes llistes com us calguin.</para>
<para
>L'element <userinput
>contexts</userinput
> conté tots els contexts. El primer és l'emprat per omissió i amb aquest s'iniciarà el ressaltat. Hi ha dues regles en el context <emphasis
>Normal Text</emphasis
>, que faran coincidir la llista de paraules clau amb el nom <emphasis
>algun_nom</emphasis
> i una regla que detecta una cometa i canvia el context a <emphasis
>cadena</emphasis
>. Per aprendre més sobre les regles llegiu el següent capítol.</para>
<para
>La tercera part és l'element <userinput
>itemDatas</userinput
>. Conté tots els colors i tipus de lletra que necessiten els contexts i les regles. En aquest exemple, s'utilitzen <userinput
>itemData</userinput
> <emphasis
>Normal Text</emphasis
>, <emphasis
>String</emphasis
> i <emphasis
>Keyword</emphasis
>. </para>
<programlisting
>&lt;highlighting&gt;
    &lt;list name=&quot;algun_nom&quot;&gt;
      &lt;item&gt; class &lt;/item&gt;
      &lt;item&gt; const &lt;/item&gt;
    &lt;/list&gt;
    &lt;contexts&gt;
      &lt;context attribute=&quot;text_normal&quot; lineEndContext=&quot;#pop&quot; name=&quot;text_normal&quot; &gt;
        &lt;keyword attribute=&quot;paraula_clau&quot; context=&quot;#stay&quot; String=&quot;algun_nom&quot; /&gt;
        &lt;DetectChar attribute=&quot;cadena&quot; context=&quot;string&quot; char=&quot;&amp;quot;&quot; /&gt;
      &lt;/context&gt;
      &lt;context attribute=&quot;cadena&quot; lineEndContext=&quot;#stay&quot; name=&quot;cadena&quot; &gt;
        &lt;DetectChar attribute=&quot;cadena&quot; context=&quot;#pop&quot; char=&quot;&amp;quot;&quot; /&gt;
      &lt;/context&gt;
    &lt;/contexts&gt;
    &lt;itemDatas&gt;
      &lt;itemData name=&quot;text_normal&quot; defStyleNum=&quot;dsNormal&quot; /&gt;
      &lt;itemData name=&quot;paraula_clau&quot; defStyleNum=&quot;dsParaula_clau&quot; /&gt;
      &lt;itemData name=&quot;cadena&quot; defStyleNum=&quot;dsCadena&quot; /&gt;
    &lt;/itemDatas&gt;
  &lt;/highlighting&gt;
</programlisting>
</listitem>
</varlistentry>

<varlistentry>
<term
>L'última part de la definició del ressaltat és la secció opcional <userinput
>general</userinput
>. Pot contenir informació sobre paraules clau, plegat del codi, comentaris i sagnat.</term>

<listitem>
<para
>La secció <userinput
>comment</userinput
> defineix amb quina cadena s'introdueix un comentari en una línia senzilla. També podeu definir un comentari en múltiples línies utilitzant <emphasis
>multiLine</emphasis
> amb l'atribut addicional <emphasis
>end</emphasis
>. Això s'empra si l'usuari prem la drecera corresponent per <emphasis
>comenta/descomenta</emphasis
>.</para>
<para
>La secció <userinput
>keywords</userinput
> defineix si les llistes de paraules clau són sensibles a majúscules i minúscules o no. Més endavant s'explicaran altres atributs.</para>
<programlisting
>&lt;general&gt;
    &lt;comments&gt;
      &lt;comment name="singleLine" start="#"/&gt;
    &lt;/comments&gt;
    &lt;keywords casesensitive="1"/&gt;
  &lt;/general&gt;
&lt;/language&gt;
</programlisting>
</listitem>
</varlistentry>

</variablelist>


</sect3>

<sect3 id="kate-highlight-sections">
<title
>Les seccions en detall</title>
<para
>Aquesta part descriu tots els atributs disponibles per als contexts, llistes de dades, paraules clau, comentaris, plegat del codi i sagnat.</para>

<variablelist>
<varlistentry>
<term
>L'element <userinput
>context</userinput
> pertany al grup <userinput
>contexts</userinput
>. Un context defineix les regles específiques de context que s'han de seguir quan el sistema de ressaltat abasta el final d'una línia. Els atributs disponibles són:</term>


<listitem>
<para
><userinput
>name</userinput
> estableix el nom del context. Les regles utilitzaran el nom per especificar el context al que canviar si les regles coincideixen.</para>
<para
><userinput
>lineEndContext</userinput
> defineix el context al que canviarà el sistema de ressaltat si abasta el final de la línia. Pot ser un nom o un altre context, <userinput
>#stay</userinput
> permetrà que no es canviï el context (&pex;, no fer res) o <userinput
>#pop</userinput
> farà que deixi aquest context. És possible utilitzar per exemple <userinput
>#pop#pop#pop</userinput
> per a sortir tres vegades, o fins i tot <userinput
>#pop#pop!AltreContext</userinput
> perquè aparegui dues vegades i canviar a un context anomenat <userinput
>AltreContext</userinput
>.</para>
<para
><userinput
>lineEmptyContext</userinput
> defineix el context si es troba una línia buida. Per omissió: #stay.</para>
<para
><userinput
>fallthrough</userinput
> defineix si el sistema de ressaltat canviarà al context especificat en fallthroughtContext si no coincideixen les regles. Per omissió: <emphasis
>false</emphasis
>.</para>
<para
><userinput
>fallthroughContext</userinput
> especifica el context següent si no hi ha regles que coincideixin.</para>
<para
><userinput
>dynamic</userinput
> si està a <emphasis
>true</emphasis
>, el context recordarà cadenes/marcadors de posició desats per les regles dinàmiques. Això es necessita per als documents HERE, per exemple. Per omissió: <emphasis
>false</emphasis
>.</para>
</listitem>
</varlistentry>


<varlistentry>
<term
>L'element <userinput
>itemData</userinput
> es troba en el grup <userinput
>itemDatas</userinput
>. Defineix l'estil i els colors dels tipus de lletra. Per tant és possible definir els vostres propis estils i colors. Encara que recomanem utilitzar els estils per omissió, atès que així l'usuari veurà colors homogenis per als diferents llenguatges. Si bé, algunes vegades no hi ha altres possibilitats i és necessari canviar el color i els atributs dels tipus de lletra. Els atributs «name» i «defStyleNum» són necessaris, els altres són opcionals. Els atributs disponibles són:</term>

<listitem>
<para
><userinput
>name</userinput
> estableix el nom del «itemData». Els contexts i les regles utilitzaran aquest nom en els seus atributs <emphasis
>attribute</emphasis
> per a fer referència a un «itemData».</para>
<para
><userinput
>defStyleNum</userinput
> defineix quin estil s'emprarà per omissió. Més endavant s'explicaran els estils per omissió disponibles.</para>
<para
><userinput
>color</userinput
> defineix un color. Els formats vàlids són «#rrggbb» o «#rgb».</para>
<para
><userinput
>selColor</userinput
> defineix el color de la selecció.</para>
<para
><userinput
>italic</userinput
> si està a <emphasis
>true</emphasis
>, el text es mostrarà en cursiva.</para>
<para
><userinput
>bold</userinput
> si està a <emphasis
>true</emphasis
>, el text es mostrarà en negreta.</para>
<para
><userinput
>underline</userinput
> si està a <emphasis
>true</emphasis
>, el text es mostrarà subratllat.</para>
<para
><userinput
>strikeout</userinput
> si està a <emphasis
>true</emphasis
>, el text es mostrarà taxat.</para>
<para
><userinput
>spellChecking</userinput
> si està a <emphasis
>true</emphasis
>, el text es mostrarà amb la verificació ortogràfica.</para>
</listitem>
</varlistentry>


<varlistentry>
<term
>L'element <userinput
>keywords</userinput
> en el grup <userinput
>general</userinput
> defineix les propietats «keyword». Els atributs disponibles són:</term>

<listitem>
<para
><userinput
>casesensitive</userinput
> pot ser <emphasis
>true</emphasis
> o <emphasis
>false</emphasis
>. Si està a <emphasis
>true</emphasis
>, totes les paraules clau seran sensibles a majúscules i minúscules.</para>
<para
><userinput
>weakDeliminator</userinput
> és una llista de caràcters que no actuen com a delimitadors de paraules (delimitador feble). Per exemple, el punt <userinput
>«.»</userinput
> és un delimitador de paraula. Si tenim una paraula clau en una <userinput
>list</userinput
> que conté un punt, tan sols la trobareu si especifiqueu el punt com a delimitador feble.</para>
<para
><userinput
>additionalDeliminator</userinput
> defineix delimitadors addicionals.</para>
<para
><userinput
>wordWrapDeliminator</userinput
> defineix els caràcters al darrere dels quals pot ocórrer un ajust de la línia.</para>
<para
>Els delimitadors per omissió i els d'ajust de la línia són els caràcters <userinput
>.():!+,-&lt;=&gt;%&amp;*/;?[]^{|}~\</userinput
>, espai (<userinput
>« »</userinput
>) i tabulació (<userinput
>«\t»</userinput
>).</para>
</listitem>
</varlistentry>


<varlistentry>
<term
>L'element <userinput
>comment</userinput
> en el grup <userinput
>comments</userinput
> defineix les propietats dels comentaris emprats per <menuchoice
><guimenu
>Eines</guimenu
><guimenuitem
>Comenta</guimenuitem
></menuchoice
> i <menuchoice
><guimenu
>Eines</guimenu
> <guimenuitem
>Descomenta</guimenuitem
></menuchoice
>. Els atributs disponibles són:</term>

<listitem>
<para
><userinput
>name</userinput
> pot ser <emphasis
>singleLine</emphasis
> o <emphasis
>multiLine</emphasis
>. Si escolliu <emphasis
>multiLine</emphasis
> es necessiten els atributs <emphasis
>end</emphasis
> i <emphasis
>region</emphasis
>.</para>
<para
><userinput
>start</userinput
> defineix la cadena que s'utilitza per iniciar un comentari. En C++ seria «/*».</para>
<para
><userinput
>end</userinput
> defineix la cadena utilitzada per a tancar un comentari. En C++ seria «*/».</para>
<para
><userinput
>region</userinput
> serà el nom amb el que es desarà el comentari multilínia. Si assumim que tenim una regió <emphasis
>beginRegion="Comentari"</emphasis
> ... <emphasis
>endRegion="Comentari"</emphasis
> en les regles, haureu d'emprar <emphasis
>region="Comentari"</emphasis
>. D'aquesta manera es descomentarà fins i tot si no heu seleccionat tot el text en un comentari multilínia. El cursor només haurà d'estar dins del comentari multilínia.</para>
</listitem>
</varlistentry>


<varlistentry>
<term
>L'element <userinput
>folding</userinput
> en el grup <userinput
>general</userinput
> defineix les propietats de plegat del codi. Els atributs disponibles són:</term>

<listitem>
<para
><userinput
>indentationsensitive</userinput
> si està a <emphasis
>true</emphasis
>, els marcadors de plegat del codi seran afegits al sagnat, com en el llenguatge per a la creació de scripts en Python. Normalment no caldrà establir-lo, pel que per omissió és <emphasis
>false</emphasis
>.</para>
</listitem>
</varlistentry>


<varlistentry>
<term
>L'element <userinput
>indentation</userinput
> en el grup <userinput
>general</userinput
> defineix quin sagnat s'utilitzarà. Encara que recomanem fervorosament que l'ometeu, atès que el sagnat sol ser establert en el tipus de fitxer o en afegir el mode de línia al fitxer de text. Tot i que si especifiqueu un sagnat, forçareu un sagnat específic per a l'usuari, que podria no agradar-li. Els atributs disponibles són:</term>

<listitem>
<para
><userinput
>mode</userinput
> és el nom del sagnat. Els sagnats disponibles a la dreta són: <emphasis
>normal, cstyle, haskell, lilypond, lisp, python, ruby</emphasis
> i <emphasis
>xml</emphasis
>.</para>
</listitem>
</varlistentry>


</variablelist>


</sect3>

<sect3 id="kate-highlight-default-styles">
<title
>Estils per omissió disponibles</title>
<para
>Els estils per omissió <link linkend="kate-highlight-system-default-styles"
>ja s'han explicat</link
>, a manera de resum: Els estils per omissió estan predefinits per als estils de colors i tipus de lletra.</para>
<variablelist>
<varlistentry>
<term
>Estils per omissió en general:</term>
<listitem>
<para
><userinput
>dsNormal</userinput
>, quan no es requereix un ressaltat especial.</para>
<para
><userinput
>dsKeyword</userinput
>, per a les paraules clau incloses.</para>
<para
><userinput
>dsFunction</userinput
>, per a crides a funcions i definicions.</para>
<para
><userinput
>dsVariable</userinput
>, si és aplicable: noms de les variables (p. ex. $algunaVar als llenguatges PHP/Perl).</para>
<para
><userinput
>dsControlFlow</userinput
>, controla el flux de paraules clau com «if», «else», «switch», «break», «return», «yield»...</para>
<para
><userinput
>dsOperator</userinput
>, operadors com + - * / :: &lt; &gt;</para>
<para
><userinput
>dsBuiltIn</userinput
>, funcions, classes i objectes inclosos.</para>
<para
><userinput
>dsExtension</userinput
>, extensions comunes, com les classes de les Qt i les funcions/macros en els llenguatges C++ i Python.</para>
<para
><userinput
>dsPreprocessor</userinput
>, per a les declaracions del preprocessador o per a les definicions de macros.</para>
<para
><userinput
>dsAttribute</userinput
>, anotacions com «@override» i «__declspec(...)».</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>Estils per omissió relacionats amb les cadenes:</term>
<listitem>
<para
><userinput
>dsChar</userinput
>, per a caràcters sols, com ara «x».</para>
<para
><userinput
>dsSpecialChar</userinput
>, caràcters amb un significat especial en cadenes com escapades, substitucions o els operadors d'expressions regulars.</para>
<para
><userinput
>dsString</userinput
>, per a cadenes com «hello world».</para>
<para
><userinput
>dsVerbatimString</userinput
>, cadenes literals o sense processar com «raw \backlash» en els llenguatges Perl, CoffeeScript i intèrprets d'ordres, així com «r'\raw'» en llenguatge Python.</para>
<para
><userinput
>dsSpecialString</userinput
>, SQL, expressions regulars, documentació HERE, mode matemàtic del LaTeX...</para>
<para
><userinput
>dsImport</userinput
>, per a importar, incloure o requerir mòduls.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>Estils per omissió relacionats amb números:</term>
<listitem>
<para
><userinput
>dsDataType</userinput
>, tipus de dades incloses com «int», «void», «u64».</para>
<para
><userinput
>dsDecVal</userinput
>, valors decimals.</para>
<para
><userinput
>dsBaseN</userinput
>, per als valors en una base diferent de 10.</para>
<para
><userinput
>dsFloat</userinput
>, per a valors decimals.</para>
<para
><userinput
>dsConstant</userinput
>, definicions incloses i definides per l'usuari com PI.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>Estils per omissió relacionats amb la documentació i els comentaris:</term>
<listitem>
<para
><userinput
>dsComment</userinput
>, per a comentaris.</para>
<para
><userinput
>dsDocumentation</userinput
>, «/** Comentaris de documentació */» o «"""cadenes_de_documentació"""».</para>
<para
><userinput
>dsAnnotation</userinput
>, ordres de la documentació com «@param», «@brief».</para>
<para
><userinput
>dsCommentVar</userinput
>, els noms de les variables utilitzades en les ordres anteriors, com «foobar» a «@param foobar».</para>
<para
><userinput
>dsRegionMarker</userinput
>, per a marcadors de regió com els comentaris «//BEGIN», «//END».</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>Altres estils per omissió:</term>
<listitem>
<para
><userinput
>dsInformation</userinput
>, notes i consells com «@note» al doxygen.</para>
<para
><userinput
>dsWarning</userinput
>, avisos com «@warning» al doxygen.</para>
<para
><userinput
>dsAlert</userinput
>, paraules especials com «TODO», «FIXME», «XXXX».</para>
<para
><userinput
>dsError</userinput
>, per a errors de ressaltat i sintaxi incorrecta.</para>
<para
><userinput
>dsOthers</userinput
>, quan res més s'hi ajusti.</para>
</listitem>
</varlistentry>
</variablelist>

</sect3>

</sect2>

<sect2 id="kate-highlight-rules-detailled">
<title
>Regles per a la detecció del ressaltat</title>

<para
>Aquesta secció descriu les regles per a la detecció del ressaltat.</para>

<para
>Cada regla pot coincidir en cap o amb diversos caràcters al començament de la cadena amb la que es comparen. Si la regla coincideix, als caràcters coincidents se'ls assigna l'estil o <emphasis
>attribute</emphasis
> definit per la regla, tanmateix una regla pot demanar que es canviï el context actual.</para>

<para
>Una regla té aquest aspecte:</para>

<programlisting
>&lt;NomRegla attribute=&quot;(identificador)&quot; context=&quot;(identificador)&quot; [atributs específics de la regla] /&gt;</programlisting>

<para
>L'<emphasis
>attribute</emphasis
> identifica l'estil que utilitzaran els caràcters coincidents per nom, i el <emphasis
>context</emphasis
> identifica el context a utilitzar des d'aquí.</para>

<para
>El <emphasis
>context</emphasis
> es pot identificar per:</para>

<itemizedlist>
<listitem>
<para
>Un <emphasis
>identifier</emphasis
>, que és el nom dels altres contexts.</para>
</listitem>
<listitem>
<para
>Una <emphasis
>order</emphasis
> us indica al motor que romandrà en el context actual (<userinput
>#stay</userinput
>), o que salti al context anterior (<userinput
>#pop</userinput
>).</para>
<para
>Per a retrocedir més passos, es pot repetir la paraula clau #pop: <userinput
>#pop#pop#pop</userinput
></para>
</listitem>
<listitem>
<para
>Una <emphasis
>ordre</emphasis
> seguida per un signe d'exclamació (<emphasis
>!</emphasis
>) i un <emphasis
>identificador</emphasis
>, el qual farà que el motor segueixi primer l'ordre i després passi a l'altre context, &pex;, <userinput
>#pop#pop!AltreContext</userinput
>.</para>
</listitem>
</itemizedlist>

<para
>Algunes regles poden tenir <emphasis
>regles filles</emphasis
> que s'executen únicament si la regla pare resulta aplicable. A tota la cadena coincident es donarà l'atribut definit per la regla pare. Una regla amb regles filles té aquest aspecte:</para>

<programlisting
>&lt;NomRegla (atributs)&gt;
  &lt;NomReglaFill (atributs) /&gt;
  ...
&lt;/NomRegla&gt;
</programlisting>


<para
>Els atributs específics de la regla varien, i es descriuen en les següents seccions.</para>


<itemizedlist>
<title
>Atributs comuns</title>
<para
>Totes les regles tenen els següents atributs comuns i estan disponibles sempre que apareixen <userinput
>(atributs comuns)</userinput
>. <emphasis
>attribute</emphasis
> i <emphasis
>context</emphasis
> són atributs requerits, els altres són opcionals. </para>

<listitem>
<para
><emphasis
>attribute</emphasis
>: Un mapa d'atributs d'un <emphasis
>itemData</emphasis
> definit.</para>
</listitem>
<listitem>
<para
><emphasis
>context</emphasis
>: Especifica el context al que canviarà el sistema de ressaltat si les regles coincideixen.</para>
</listitem>
<listitem>
<para
><emphasis
>beginRegion</emphasis
>: Inicia un bloc de plegat del codi. Per omissió: unset.</para>
</listitem>
<listitem>
<para
><emphasis
>endRegion</emphasis
>: Tanca un bloc de plegat del codi. Per omissió: unset.</para>
</listitem>
<listitem>
<para
><emphasis
>lookAhead</emphasis
>: Si està a <emphasis
>true</emphasis
>, el sistema de ressaltat no processarà les longituds coincidents. Per omissió: <emphasis
>false</emphasis
>.</para>
</listitem>
<listitem>
<para
><emphasis
>firstNonSpace</emphasis
>: Només coincidiran si la cadena no conté un espai en blanc al començament de la línia. Per omissió: <emphasis
>false</emphasis
>.</para>
</listitem>
<listitem>
<para
><emphasis
>column</emphasis
>: Només coincideix, si la columna coincideix. Per omissió: unset.</para>
</listitem>
</itemizedlist>

<itemizedlist>
<title
>Regles dinàmiques</title>
<para
>Algunes regles permeten l'atribut opcional <userinput
>dynamic</userinput
> de tipus lògic que per omissió és <emphasis
>false</emphasis
>. Si dynamic està a <emphasis
>true</emphasis
>, la regla podrà utilitzar arguments que representin el text coincident amb una regla d'una <emphasis
>expressió regular</emphasis
> que canviï al context actual per al contingut en els atributs <userinput
>string</userinput
> o <userinput
>char</userinput
>. En un <userinput
>string</userinput
>, l'argument <replaceable
>%N</replaceable
> (a on N és un número) se substituirà amb la corresponent <replaceable
>N</replaceable
> capturada des de l'expressió regular cridada. En un <userinput
>char</userinput
> l'argument haurà de ser un número <replaceable
>N</replaceable
> i serà substituït amb el primer caràcter de la corresponent <replaceable
>N</replaceable
> capturada des de l'expressió regular cridada. Sempre que un regla permeti aquest atribut haurà de contenir un <emphasis
>(dynamic)</emphasis
>.</para>

<listitem>
<para
><emphasis
>dinàmic</emphasis
>: pot ser <emphasis
>(true|false)</emphasis
>.</para>
</listitem>
</itemizedlist>

<sect3 id="highlighting-rules-in-detail">
<title
>Les regles en detall</title>

<variablelist>
<varlistentry>
<term
>DetectChar</term>
<listitem>
<para
>Detecta un únic caràcter específic. Normalment s'utilitza per a trobar el final de les cadenes entre cometes.</para>
<programlisting
>&lt;DetectChar char=&quot;(caràcter)&quot; (atributs comuns) (dinàmic) /&gt;</programlisting>
<para
>L'atribut <userinput
>char</userinput
> defineix el caràcter a comparar.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>Detect2Chars</term>
<listitem>
<para
>Detecta dos caràcters especificats en l'ordre definit.</para>
<programlisting
>&lt;Detect2Chars char=&quot;(caràcter)&quot; char1=&quot;(caràcter)&quot; (atributs comuns) (dinàmic) /&gt;</programlisting>
<para
>L'atribut <userinput
>char</userinput
> defineix el primer caràcter a comparar, <userinput
>char1</userinput
> el segon.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>AnyChar</term>
<listitem>
<para
>Detecta un caràcter d'un conjunt de caràcters especificats.</para>
<programlisting
>&lt;AnyChar String=&quot;(cadena)&quot; (atributs comuns) /&gt;</programlisting>
<para
>L'atribut <userinput
>String</userinput
> defineix el conjunt de caràcters.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>StringDetect</term>
<listitem>
<para
>Detecta una cadena exacta.</para>
<programlisting
>&lt;StringDetect String=&quot;(cadena)&quot; [insensitive=&quot;true|false&quot;] (atributs comuns) (dinàmic) /&gt;</programlisting>
<para
>L'atribut <userinput
>String</userinput
> defineix la cadena a comparar. L'atribut <userinput
>insensitive</userinput
> per omissió és <userinput
>false</userinput
> i es passa a la funció de comparació de la cadena. Si el valor és <userinput
>true</userinput
> la comparació no serà sensible a majúscules i minúscules.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>WordDetect</term>
<listitem>
<para
>Detectar una cadena exacta requereix límits de paraula com un punt <userinput
>«.»</userinput
> o un espai en blanc al començament i al final de la paraula. Penseu en <userinput
>\b&lt;cadena&gt;\b</userinput
> en termes d'una expressió regular, però és més ràpid que la regla <userinput
>RegExpr</userinput
>.</para>
<programlisting
>&lt;WordDetect String=&quot;(cadena)&quot; [insensitive=&quot;true|false&quot;] (atributs comuns) (dinàmic) /&gt;</programlisting>
<para
>L'atribut <userinput
>String</userinput
> defineix la cadena a comparar. L'atribut <userinput
>insensitive</userinput
> per omissió és <userinput
>false</userinput
> i es passa a la funció de comparació de la cadena. Si el valor és <userinput
>true</userinput
> la comparació no serà sensible a majúscules i minúscules.</para>
<para
>Des del: Kate 3.5 (KDE 4.5)</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>RegExpr</term>
<listitem>
<para
>Cerca la coincidència amb una expressió regular.</para>
<programlisting
>&lt;RegExpr String=&quot;(cadena)&quot; [insensitive=&quot;true|false&quot;] [minimal=&quot;true|false&quot;] (atributs comuns) (dinàmic) /&gt;</programlisting>
<para
>L'atribut <userinput
>String</userinput
> defineix l'expressió regular.</para>
<para
><userinput
>insensitive</userinput
> per omissió és <userinput
>false</userinput
> i és passada al motor d'expressions regulars.</para>
<para
><userinput
>minimal</userinput
> per omissió és <userinput
>false</userinput
> i és passada al motor d'expressions regulars.</para>
<para
>Atès que les regles coincideixen amb el començament de la cadena actual, una expressió regular que comenci amb l'accent circumflex (<literal
>^</literal
>) indica que la regla tan sols s'haurà de comparar amb el començament d'una línia.</para>
<para
>Vegeu la secció sobre <link linkend="regular-expressions"
>expressions regulars</link
> per obtenir més informació.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>keyword</term>
<listitem>
<para
>Detecta una paraula clau des d'una llista especificada.</para>
<programlisting
>&lt;keyword String=&quot;(nom de la llista)&quot; (atributs comuns) /&gt;</programlisting>
<para
>L'atribut <userinput
>String</userinput
> identifica la llista de paraules clau pel seu nom. Haurà d'existir una llista amb aquest nom.</para>
<para
>El sistema de ressaltat processa les regles de paraules clau d'una manera molt optimitzada. Això fa que sigui una necessitat absoluta que qualsevol paraula clau que coincideixi necessitarà estar envoltada pels delimitadors definits, ja sigui implícitament (els delimitadors per omissió), o explícitament especificat dins la propietat <emphasis
>additionalDeliminator</emphasis
> de l'etiqueta <emphasis
>keywords</emphasis
>.</para>
<para
>Si una paraula clau coincideix haurà de contenir un caràcter de delimitador, aquest caràcter respectiu haurà d'afegir-se a la propietat <emphasis
>weakDeliminator</emphasis
> de l'etiqueta <emphasis
>keywords</emphasis
>. Aquest caràcter perdrà la seva propietat delimitadora en totes les regles <emphasis
>keyword</emphasis
>.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>Int</term>
<listitem>
<para
>Detecta un nombre enter.</para>
<para
><programlisting
>&lt;Int (atributs comuns) (dinàmic) /&gt;</programlisting
></para>
<para
>Aquesta regla no té atributs específics. Les regles filles normalment s'utilitzen per a detectar combinacions de <userinput
>L</userinput
> i <userinput
>U</userinput
> després del número, indicant el tipus d'enter en el codi del programa. En realitat s'admeten totes les regles com a regles filles, tot i que, la <userinput
>DTD</userinput
> només permet la regla fill <userinput
>StringDetect</userinput
>.</para>
<para
>El següent exemple troba nombres enters seguits del caràcter «L». <programlisting
>&lt;Int attribute="Decimal" context="#stay" &gt;
  &lt;StringDetect attribute="Decimal" context="#stay" String="L" insensitive="true"/&gt;
&lt;/Int&gt;
</programlisting
></para>

</listitem>
</varlistentry>

<varlistentry>
<term
>Decimals</term>
<listitem>
<para
>Detecta un nombre decimal.</para>
<para
><programlisting
>&lt;Float (atributs comuns) /&gt;</programlisting
></para>
<para
>Aquesta regla no té atributs específics. Es permet <userinput
>AnyChar</userinput
> com a regla fill i normalment s'utilitza per a detectar combinacions, vegeu la regla <userinput
>Int</userinput
> com a referència.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>HlCOct</term>
<listitem>
<para
>Detecta una representació numèrica d'un nombre octal.</para>
<para
><programlisting
>&lt;HlCOct (atributs comuns) /&gt;</programlisting
></para>
<para
>Aquesta regla no té atributs específics.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>HlCHex</term>
<listitem>
<para
>Detecta una representació numèrica d'un nombre hexadecimal.</para>
<para
><programlisting
>&lt;HlCHex (atributs comuns) /&gt;</programlisting
></para>
<para
>Aquesta regla no té atributs específics.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>HlCStringChar</term>
<listitem>
<para
>Detecta un caràcter escapat.</para>
<para
><programlisting
>&lt;HlCStringChar (atributs comuns) /&gt;</programlisting
></para>
<para
>Aquesta regla no té atributs específics.</para>

<para
>Localitza representacions literals de caràcters que habitualment s'utilitzen en el codi de programació, per exemple <userinput
>\n</userinput
> (línia nova) o <userinput
>\t</userinput
> (tabulació).</para>

<para
>Els següents caràcters coincideixen amb la regla si segueixen a una barra inversa (<literal
>\</literal
>): <userinput
>abefnrtv&quot;'?\</userinput
>. A més seran vàlids els nombres hexadecimals escapats com per exemple <userinput
>\xff</userinput
>, i els nombres octals escapats, per exemple <userinput
>\033</userinput
>.</para>

</listitem>
</varlistentry>

<varlistentry>
<term
>HlCChar</term>
<listitem>
<para
>Detecta un caràcter C.</para>
<para
><programlisting
>&lt;HlCChar (atributs comuns) /&gt;</programlisting
></para>
<para
>Aquesta regla no té atributs específics.</para>

<para
>Localitza caràcters C tancats en una marca (Exemple: <userinput
>'c'</userinput
>). La marca pot ser un caràcter simple o un caràcter escapat. Vegeu «HICStringChar» per a localitzar seqüències de caràcters escapats.</para>

</listitem>
</varlistentry>

<varlistentry>
<term
>RangeDetect</term>
<listitem>
<para
>Detecta una cadena amb caràcters d'inici i de final definits.</para>
<programlisting
>&lt;RangeDetect char=&quot;(caràcter)&quot;  char1=&quot;(caràcter)&quot; (atributs comuns) /&gt;</programlisting>
<para
><userinput
>char</userinput
> defineix el caràcter que inicia l'interval, <userinput
>char1</userinput
> el caràcter que finalitza l'interval.</para>
<para
>És molt útil per a detectar per exemple petites cadenes entre cometes i similars, però tingueu en compte que el motor de ressaltat només pot treballar amb una línia alhora, de manera que no es detectaran les cadenes que estiguin dividides en dues línies o més.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>LineContinue</term>
<listitem>
<para
>Coincideix amb un caràcter específic al final d'una línia.</para>
<programlisting
>&lt;LineContinue (atributs comuns) [char="\"] /&gt;</programlisting>
<para
>L'atribut <userinput
>char</userinput
> defineix un caràcter opcional a comparar, per defecte és la barra inversa (<userinput
>'\'</userinput
>). Nou des del &kde; 4.13.</para>
<para
>Aquesta regla és pràctica per a canviar el context al final de la línia. Això és necessari per exemple en C/C++ per a continuar macros o cadenes.</para>
</listitem>
</varlistentry>

<varlistentry>
<term
>IncludeRules</term>
<listitem>
<para
>Inclou regles des d'un altre context o llenguatge/fitxer.</para>
<programlisting
>&lt;IncludeRules context=&quot;contextlink&quot; [includeAttrib=&quot;true|false&quot;] /&gt;</programlisting>

<para
>L'atribut <userinput
>context</userinput
> defineix el context a incloure.</para>
<para
>Si és una cadena simple, inclourà totes les regles definides en el context actual, exemple: <programlisting
>&lt;IncludeRules context=&quot;anotherContext&quot; /&gt;</programlisting
></para>

<para
>Si la cadena conté un <userinput
>##</userinput
> el sistema de ressaltat cercarà un context d'una altra definició del llenguatge amb el nom indicat, per exemple, <programlisting
>&lt;IncludeRules context=&quot;String##C++&quot; /&gt;</programlisting
> inclouria el context <emphasis
>String</emphasis
> des de la definició de ressaltat en <emphasis
>C++</emphasis
>.</para>
<para
>Si l'atribut <userinput
>includeAttrib</userinput
> està a <emphasis
>true</emphasis
>, canvia l'atribut de destinació per un altre de la font. Això és necessari, per exemple, per al treball de comentar, si el text coincideix amb el context inclòs s'utilitzarà un ressaltat diferent que amb el context amfitrió. </para>
</listitem>
</varlistentry>


<varlistentry>
<term
>DetectSpaces</term>
<listitem>
<para
>Detecta els espais en blanc.</para>
<programlisting
>&lt;DetectSpaces (atributs comuns) /&gt;</programlisting>

<para
>Aquesta regla no té atributs específics.</para>
<para
>Utilitzeu aquesta regla si sabeu que hi poden haver diversos espais en blanc al davant, per exemple, al començament de les línies sagnades. Aquesta regla ometrà tots els espais en blanc a la vegada, en comptes de comprovar múltiples regles i saltar coincidències.</para>
</listitem>
</varlistentry>


<varlistentry>
<term
>DetectIdentifier</term>
<listitem>
<para
>Detecta identificadors de cadenes (com una expressió regular: [a-zA-Z_][a-zA-Z0-9_]*).</para>
<programlisting
>&lt;DetectIdentifier (atributs comuns) /&gt;</programlisting>

<para
>Aquesta regla no té atributs específics.</para>
<para
>Utilitzeu aquesta regla per a saltar d'una vegada una cadena de paraula de caràcters, en comptes de comprovar múltiples regles i saltar coincidències.</para>
</listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3>
<title
>Consells i trucs</title>

<itemizedlist>
<para
>Una vegada que hàgiu entès com funciona el canvi de context serà fàcil escriure definicions de ressaltat. Tot i que haureu de tenir cura de comprovar en quina situació s'hauria de seleccionar una regla. Les expressions regulars són molt potents, però són lentes en comparació amb altres regles. Per això haureu de tenir en compte els següents consells. </para>

<listitem>
<para
>Si només heu de localitzar dos caràcters, utilitzeu <userinput
>Detect2Chars</userinput
> en comptes de <userinput
>StringDetect</userinput
>. El mateix s'aplica a <userinput
>DetectChar</userinput
>.</para>
</listitem>
<listitem>
<para
>Les expressions regulars són fàcils d'emprar però a vegades hi ha formes molt més ràpides d'obtenir el mateix resultat. Imagineu que només desitgeu localitzar el caràcter <userinput
>«#»</userinput
> si aquest és el primer caràcter de la línia. Una solució basada en una expressió regular seria quelcom semblant a això: <programlisting
>&lt;RegExpr attribute=&quot;Macro&quot; context=&quot;macro&quot; String=&quot;^\s*#&quot; /&gt;</programlisting
>Podeu aconseguir el mateix molt més ràpid utilitzant: <programlisting
>&lt;DetectChar attribute=&quot;Macro&quot; context=&quot;macro&quot; char=&quot;#&quot; firstNonSpace=&quot;true&quot; /&gt;</programlisting
>Si voleu que l'expressió regular localitzi <userinput
>«^#»</userinput
> també podeu utilitzar <userinput
>DetectChar</userinput
> amb l'atribut <userinput
>column=&quot;0&quot;</userinput
>. L'atribut <userinput
>column</userinput
> compta els caràcters, per tant el tabulador és només un caràcter. </para>
</listitem>
<listitem>
<para
>Podeu canviar de context sense processar els caràcters. Suposeu que voleu canviar de context quan trobeu una cadena <userinput
>*/</userinput
>, però cal processar aquesta cadena en el següent context. La regla de sota coincidirà, i l'atribut <userinput
>lookAhead</userinput
> farà que es desi la cadena coincident per al següent context. <programlisting
>&lt;Detect2Chars attribute=&quot;Comment&quot; context=&quot;#pop&quot; char=&quot;*&quot; char1=&quot;/&quot; lookAhead=&quot;true&quot; /&gt;</programlisting>
</para>
</listitem>
<listitem>
<para
>Utilitzeu <userinput
>DetectSpaces</userinput
> si sabeu quants espais en blanc hi ha.</para>
</listitem>
<listitem>
<para
>Utilitzeu <userinput
>DetectIdentifier</userinput
> en comptes de l'expressió regular <userinput
>«[a-zA-Z_]\w*»</userinput
>.</para>
</listitem>
<listitem>
<para
>Utilitza els estils per omissió sempre que es pugui. D'aquesta manera l'usuari es trobarà un entorn familiar.</para>
</listitem>
<listitem>
<para
>Mireu altres fitxers XML per a comprovar de quina forma altra gent implementa les regles delicades.</para>
</listitem>
<listitem>
<para
>Podeu validar tots els fitxers XML utilitzant l'ordre <command
>validatehl.sh language.xsd mySyntax.xml</command
>. Els fitxers <filename
>validatehl.sh</filename
> i <filename
>language.xsd</filename
> estan disponibles al <ulink url="https://commits.kde.org/syntax-highlighting?path=data/schema"
>repositori del ressaltat de la sintaxi</ulink
>. </para>
</listitem>
<listitem>
<para
>Si tot sovint repetiu expressions regulars complexes podeu utilitzar <emphasis
>ENTITIES</emphasis
>. Exemple:</para>
<programlisting
>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE language SYSTEM "language.dtd"
[
        &lt;!ENTITY la_meva_ref    "[A-Za-z_:][\w.:_-]*"&gt;
]&gt;
</programlisting>
<para
>Ara podeu utilitzar <emphasis
>&amp;la_meva_ref;</emphasis
> en comptes de l'expressió regular.</para>
</listitem>
</itemizedlist>
</sect3>

</sect2>

</sect1>


<sect1 id="dev-scripting">
<title
>Crear scripts amb JavaScript</title>

<para
>El component d'edició de la &kappname; és fàcilment extensible, escrivint scripts. El llenguatge per crear scripts és ECMAScript (conegut com a Javascript). La &kappname; admet dos tipus de script: de sagnat i de línia d'ordres. </para>

<sect2 id="dev-scripting-indentation">
<title
>Scripts de sagnat</title>

<para
>Els scripts de sagnat: També coneguts com a «indenters», sagnen automàticament el codi font en escriure text. Com a exemple, després de prémer la tecla de retorn el nivell de sagnat sovint és incrementat. </para>

<para
>En les següents seccions es descriuen pas a pas com crear l'esquelet d'un sagnat simple. Com a primer pas, creeu un fitxer <filename
>*.js</filename
> nou anomenat, &pex;, <filename
>javascript.js</filename
> a la carpeta d'inici local <filename
>$<envar
>XDG_DATA_HOME</envar
>/katepart5/script/indentation</filename
>. En aquest sentit, la variable d'entorn <envar
>XDG_DATA_HOME</envar
> normalment s'expandeix a <filename
>~/.local</filename
> o <filename
>~/.local/share</filename
>. </para>
<para
>Al &Windows; aquests fitxers es troben a <filename
>%USER%\AppData\Local\katepart5\indentation</filename
>. <replaceable
>%USERPROFILE%</replaceable
> que generalment s'expandeix a <filename
>C:\\Users\\<replaceable
>usuari</replaceable
></filename
>.</para>

<sect3 id="dev-scripting-indentation-header">
<title
>La capçalera de l'script de sagnat</title>
<para
>La capçalera del fitxer <filename
>javascript.js</filename
> està inclosa com un JSON al començament del document de la forma següent: <programlisting>
var katescript = {
    "name": "JavaScript",
    "author": "Nom exemple &lt;nom.exemple@alguna.adreça.org&gt;",
    "license": "BSD License",
    "revision": 1,
    "kate-version": "5.1",
    "required-syntax-style": "javascript",
    "indent-languages": ["javascript"],
    "priority": 0,
}; // kate-script-header, haurà d'estar al començament del fitxer sense comentaris
</programlisting
> Cada entrada s'explica en detall tot seguit: <itemizedlist>
<listitem
><para
><literal
>name</literal
> [requerit]: Aquest és el nom del sagnat que apareix al menú <menuchoice
><guimenu
>Eines</guimenu
><guimenuitem
>Sagnat</guimenuitem
></menuchoice
> i en el diàleg de configuració. </para
></listitem>
<listitem
><para
><literal
>author</literal
> [opcional]: El nom de l'autor i la informació de contacte. </para
></listitem>
<listitem
><para
><literal
>license</literal
> [opcional]: La forma curta de la llicència, com ara BSD o LGPLv3. </para
></listitem>
<listitem
><para
><literal
>revision</literal
> [requerit]: La revisió de l'script. Aquest número ha de ser major cada vegada que es modifica l'script. </para
></listitem>
<listitem
><para
><literal
>kate-version</literal
> [requerit]: La versió mínima requerida per la &kappname;. </para
></listitem>
<listitem
><para
><literal
>required-syntax-style</literal
> [opcional]: L'estil de la sintaxi requerida, el qual coincideix amb <literal
>style</literal
> especificat als fitxers de ressaltat de la sintaxi. Això és important per als sagnats que es basen en la informació de ressaltat específica en el document. Si s'especifica un estil de la sintaxi requerit, el sagnat només estarà disponible amb el ressaltat actiu apropiat. Això evita <quote
>comportament sense definir</quote
> causat per l'ús del sagnat sense l'esquema del ressaltat esperat. Per exemple, el sagnat de Ruby en fa ús en els fitxers <filename
>ruby.js</filename
> i <filename
>ruby.xml</filename
>. </para
></listitem>
<listitem
><para
><literal
>indent-languages</literal
> [opcional]: Una matriu JSON dels estils de la sintaxi que pot sagnar correctament, &pex;: <literal
>["c++", "java"]</literal
>. </para
></listitem>
<listitem
><para
><literal
>priority</literal
> [opcional]: Si els diversos sagnats són adequats per a un determinat fitxer ressaltat, la prioritat decideix quin sagnat és triat com sagnat per omissió. </para
></listitem>
</itemizedlist>
</para>

</sect3>

<sect3 id="dev-scripting-indentation-body">
<title
>El codi font del sagnat</title>
<para
>Després d'haver especificat la capçalera aquesta secció explica com funciona la creació de scripts de sagnat. L'esquelet bàsic del cos s'assembla a això: <programlisting>
// es necessiten les biblioteques «js» de katepart, per exemple, «range.js»
// si utilitzeu «Range»
require ("range.js");
  
triggerCharacters = "{}/:;";
function indent(line, indentWidth, ch)
{
    // crida per a cada línia nova (ch == «\n») i tots els caràcters s'especifiquen en
    // la variable global triggerCharacters. Quan es crida <menuchoice
><guimenu
>Eines</guimenu
><guimenuitem
>Alinea</guimenuitem
></menuchoice>
    // la variable ch és buidada, &ead;, ch == «».
    //
    // Vegeu també: L'API per a la creació de scripts
    return -2;
}
</programlisting
> La funció <function
>indent()</function
> té tres paràmetres: <itemizedlist
> <listitem
><para
><literal
>line</literal
>: La línia que ha d'estar amb sagnat.</para
></listitem
> <listitem
><para
><literal
>indentWidth</literal
>: L'amplada del sagnat en nombre d'espais.</para
></listitem
> <listitem
><para
><literal
>ch</literal
>: o bé un caràcter de línia nova (<literal
>ch == '\n'</literal
>),el caràcter de tall especificat en <literal
>triggerCharacters</literal
> o buida si l'usuari invoca l'acció <menuchoice
><guimenu
>Eines</guimenu
><guimenuitem
>Alinea</guimenuitem
></menuchoice
>.</para
></listitem
> </itemizedlist
> El valor retornat de la funció <function
>indent()</function
> especifica com se sagna la línia. Si el valor retornat és un nombre enter simple, aquest s'interpreta de la següent manera: <itemizedlist
> <listitem
><para
>El valor retornat <literal
>-2</literal
>: No fa res.</para
></listitem
> <listitem
><para
>El valor retornat <literal
>-1</literal
>: Es manté el sagnat (cerca la línia anterior que no estigui en blanc).</para
></listitem
> <listitem
><para
>El valor retornat <literal
> 0</literal
>: Un número &gt;= 0 especifica la profunditat del sagnat en nombre d'espais.</para
></listitem
> </itemizedlist
> Alternativament, un conjunt de dos elements poden retornar: <itemizedlist
> <listitem
><para
><literal
>return [ indent, align ];</literal
></para
></listitem
> </itemizedlist
> En aquest cas, el primer element és la profunditat de sagnat com anteriorment amb el mateix significat dels valors especials. No obstant això, el segon element és un valor absolut que representa una columna d'<quote
>alineació</quote
>. Si aquest valor és major que el valor de sagnat, la diferència representa un nombre d'espais a afegir després del sagnat del primer paràmetre. En cas contrari, el segon nombre serà ignorat. L'ús de tabulacions i espais per al sagnat sovint és referit com <quote
>mode mixt</quote
>. </para>

<para
>Considerem el següent exemple: Suposem que s'utilitzen tabulacions per a sagnar, i l'amplada de la tabulació és 4. Aquí, &lt;tab&gt; representa una tabulació i «.» un espai: <programlisting>
1: &lt;tab&gt;&lt;tab&gt;foobar("hola",
2: &lt;tab&gt;&lt;tab&gt;......."món");
</programlisting
> Quan se sagna la línia 2, la funció <function
>indent()</function
> retorna [8, 15]. Com a resultat, s'insereixen dues tabulacions per a sagnar fins a la columna 8, i s'afegeixen 7 espais per alinear el segon paràmetre a la primera, de manera que quedi alineat si el fitxer es veu amb una amplada de tabulació diferent. </para>

<para
>Una instal·lació per omissió del &kde; ens dóna la &kappname; amb diversos sagnats. El corresponent codi font de JavaScript d'origen pot trobar-se en <filename
>$<envar
>XDG_DATA_DIRS</envar
>/katepart5/script/indentation</filename
>.</para>
<para
>Al &Windows; aquests fitxers es troben a <filename
>%USER%\AppData\Local\katepart5\indentation</filename
>. <replaceable
>%USER%</replaceable
> que generalment s'expandeix a <filename
>C:\\Users\\<replaceable
>usuari</replaceable
></filename
>. </para>

<para
>El desenvolupament d'un sagnat requereix tornar a carregar els scripts per veure si els canvis es comporten adequadament. En comptes de reiniciar l'aplicació, simplement canvieu a la línia d'ordres i crideu l'ordre <command
>reload-scripts</command
>. </para>

<para
>Si desenvolupeu scripts útils, si us plau, considereu contribuir al projecte &kappname; <ulink url="mailto:kwrite-devel@kde.org"
>posant-vos en contacte amb la llista de correu</ulink
>. </para>

</sect3>
</sect2>

<sect2 id="dev-scripting-command-line">
<title
>Els scripts de la línia d'ordres</title>

<para
>Com és difícil satisfer les necessitats de tothom, la &kappname; suporta unes quantes eines d'ajuda per a la manipulació ràpida de text a través de la <link linkend="advanced-editing-tools-commandline"
>línia d'ordres inclosa</link
>. Per exemple, l'ordre <command
>sort</command
> s'implementa com un script. En aquesta secció s'explica com crear fitxers <filename
>*.js</filename
> per estendre la &kappname; amb scripts d'ajuda arbitrària. </para>

<para
>Els scripts de línia d'ordres es troben a la mateixa carpeta que els scripts de sagnat. Així que com a primer pas, creeu un fitxer <filename
>*.js</filename
> nou anomenat <filename
>myutils.js</filename
> a la carpeta d'inici local <filename
>$<envar
>XDG_DATA_HOME</envar
>/katepart5/script/commands</filename
>. En aquest sentit, la variable d'entorn <envar
>XDG_DATA_HOME</envar
> normalment s'expandeix a <filename
>~/.local</filename
> o <filename
>~/.local/share</filename
>.</para>
<para
>Al &Windows; aquests fitxers es troben a <filename
>%USER%\AppData\Local\katepart5\commands</filename
>. <replaceable
>%USER%</replaceable
> que generalment s'expandeix a <filename
>C:\\Users\\<replaceable
>usuari</replaceable
></filename
>. </para>

<sect3 id="dev-scripting-command-line-header">
<title
>La capçalera de l'script de línia d'ordres</title>
<para
>La capçalera de cada script de la línia d'ordres està inclosa en el JSON al començament de l'script de la forma següent: <programlisting>
var katescript = {
    "author": "Nom exemple &lt;nom.exemple@alguna.adreça.org&gt;",
    "license": "LGPLv2+",
    "revision": 1,
    "kate-version": "5.1",
    "functions": ["sort", "moveLinesDown"],
    "actions": [
        {   "function": "sort",
            "name": "Sort Selected Text",
            "category": "Editing",
            "interactive": "false"
        },
        {   "function": "moveLinesDown",
            "name": "Move Lines Down",
            "category": "Editing",
            "shortcut": "Ctrl+Shift+Down",
            "interactive": "false"
        }
    ]
}; // kate-script-header, haurà d'estar al començament del fitxer sense comentaris
</programlisting
> Cada entrada s'explica en detall tot seguit: <itemizedlist>
<listitem
><para
><literal
>author</literal
> [opcional]: El nom de l'autor i la informació de contacte.</para
></listitem>
<listitem
><para
><literal
>license</literal
> [opcional]: La forma curta de la llicència, com ara BSD o LGPLv2.</para
></listitem>
<listitem
><para
><literal
>revision</literal
> [requerit]: La revisió de l'script. Aquest número ha de ser major cada vegada que es modifica l'script.</para
></listitem>
<listitem
><para
><literal
>kate-version</literal
> [requerit]: La versió mínima requerida per la &kappname;.</para
></listitem>
<listitem
><para
><literal
>functions</literal
> [requerit]: Matriu JSON de les ordres a l'script.</para
></listitem>
<listitem
><para
><literal
>actions</literal
> [opcional]: La matriu JSON dels objectes JSON que defineixen les accions que apareixen al menú de l'aplicació. Es proporciona informació detallada a la secció <link linkend="advanced-editing-tools-commandline"
>Vincular dreceres</link
>.</para
></listitem>
</itemizedlist>
</para>

<para
>Atès que el valor de <literal
>functions</literal
> és una matriu JSON, un únic script és capaç de contenir un nombre arbitrari d'ordres de la línia d'ordres. Cada funció està disponible a través de la <link linkend="advanced-editing-tools-commandline"
>línia d'ordres integrada</link
> a la &kappname;. </para>
</sect3>

<sect3 id="dev-scripting-command-line-body">
<title
>El codi font de l'script</title>

<para
>Totes les funcions especificades a la capçalera s'han d'implementar a l'script. Per exemple, el fitxer de script en l'exemple anterior necessita implementar les dues funcions <command
>sort</command
> i <command
>moveLinesDown</command
>. Totes les funcions tenen la següent sintaxi: <programlisting
>// es necessiten les biblioteques «js» de la katepart, per exemple, «range.js»
// si utilitzeu «Range»
require ("range.js");

function &lt;nom&gt;(arg1, arg2...)
{
    // «...» implementació, vegeu també: L'API per a la creació de scripts.
}
</programlisting>
</para>

<para
>Els arguments en la línia d'ordres es passen a la funció com <parameter
>arg1</parameter
>, <parameter
>arg2</parameter
>, &etc; Per tal de proveir documentació per a cada ordre, simplement implementeu la funció «<function
>help</function
>» de la següent manera: <programlisting>
{
    if (cmd == "sort") {
        return i18n("Ordena el text seleccionat.");
    } else if (cmd == "...") {
        // ...
    }
}
</programlisting
> Executar <command
>help sort</command
> a la línia d'ordres crida a aquesta funció d'ajuda amb l'argument <parameter
>cmd</parameter
> establert en l'ordre donada, &ead;, <parameter
>cmd == "sort"</parameter
>. La &kappname; presentarà el text retornat com a documentació per a l'usuari. Assegureu-vos de <link linkend="dev-scripting-api-i18n"
>traduir les cadenes</link
>. </para>

<para
>El desenvolupament d'un script de línia d'ordres requereix tornar a carregar els scripts per veure si els canvis es comporten adequadament. En comptes de reiniciar l'aplicació, simplement canvieu a la línia d'ordres i crideu l'ordre <command
>reload-scripts</command
>. </para>

<sect4 id="dev-scripting-command-line-shortcuts">
<title
>Vincular les dreceres</title>
<para
>Per tal de fer que els scripts siguin accessibles al menú de l'aplicació i assignar dreceres, l'script ha de proporcionar una capçalera de script adequada. En l'exemple anterior, ambdues funcions <literal
>sort</literal
> i <literal
>moveLinesDown</literal
> apareixen al menú per la següent part a la capçalera de l'script: <programlisting>
var katescript = {
    ...
    "actions": [
        {   "function": "sort",
            "name": "Sort Selected Text",
            "icon": "",
            "category": "Editing",
            "interactive": "false"
        },
        {   "function": "moveLinesDown",
            "name": "Move Lines Down",
            "icon": "",
            "category": "Editing",
            "shortcut": "Ctrl+Shift+Down",
            "interactive": "false"
        }
    ]
};
</programlisting
> Els camps per a una acció són els següents: <itemizedlist>
<listitem
><para
><literal
>function</literal
> [requerit]: La funció que ha d'aparèixer al menú <menuchoice
><guimenu
>Eines</guimenu
> <guisubmenu
>Scripts</guisubmenu
></menuchoice
>.</para
></listitem>
<listitem
><para
><literal
>name</literal
> [requerit]: El text apareix al menú de l'script.</para
></listitem>
<listitem
><para
><literal
>icon</literal
> [opcional]: La icona apareix al costat del text en el menú. Aquí es poden utilitzar tots els noms d'icones del &kde;. </para
></listitem>
<listitem
><para
><literal
>category</literal
> [opcional]: Si s'especifica una categoria, l'script apareixerà en un submenú.</para
></listitem>
<listitem
><para
><literal
>shortcut</literal
> [opcional]: La drecera indicada serà la drecera per omissió. Exemple: <literal
>Ctrl+Alt+t</literal
>. Per a més detalls, vegeu la <ulink url="http://qt-project.org/doc/qt-5/qt.html#Key-enum"
>Documentació de les Qt</ulink
>.</para
></listitem>
<listitem
><para
><literal
>interactive</literal
> [opcional]: Si l'script necessita utilitzar l'entrada a la línia d'ordres, establiu-ho a <literal
>true</literal
> (vertader).</para
></listitem>
</itemizedlist>
</para>

<para
>Si desenvolupeu scripts útils, si us plau, considereu contribuir al projecte &kappname; <ulink url="mailto:kwrite-devel@kde.org"
>posant-vos en contacte amb la llista de correu</ulink
>. </para>

</sect4>
</sect3>
</sect2>

<sect2 id="dev-scripting-api">
<title
>L'API per a la creació de scripts</title>

<para
>L'API per a la creació de scripts que es presenta aquí està disponible per a tots els scripts, &pex;, els scripts de sagnat i una ordre de línia d'ordres. Les classes <classname
>Cursor</classname
> i <classname
>Range</classname
> són proporcionades pels fitxers de la biblioteca a <filename
>$<envar
>XDG_DATA_DIRS</envar
>/katepart5/libraries</filename
>. Si voleu utilitzar-los en el seu vostre script, serà necessari utilitzar algunes de les funcions <classname
>Document</classname
> o <classname
>View</classname
>, si us plau, afegiu la biblioteca necessària mitjançant: <programlisting
>// es necessiten les biblioteques «js» de la katepart, per exemple, «range.js»
// si utilitzeu «Range»
require ("range.js");
</programlisting>
</para>

<para
>Per estendre la norma de l'API per a la creació de scripts amb les vostres pròpies funcions i prototips n'hi ha prou amb crear un fitxer nou a la carpeta de configuració local del &kde; <filename
>$<envar
>XDG_DATA_HOME</envar
>/katepart5/libraries</filename
> i incloure'l a l'script utilitzant: <programlisting
>require ("nom_script.js");
</programlisting>

</para>

<para
>Al &Windows; aquests fitxers es troben a <filename
>%USER%\AppData\Local\katepart5\libraries</filename
>. <replaceable
>%USER%</replaceable
> que generalment s'expandeix a <filename
>C:\\Users\\<replaceable
>usuari</replaceable
></filename
>.</para>

<para
>Per estendre els prototips com <classname
>Cursor</classname
> o <classname
>Range</classname
>, la manera més recomanable és <emphasis
>no</emphasis
> modificar els fitxers <filename
>*.js</filename
> globals. En el seu lloc, canvieu el prototip <classname
>Cursor</classname
> en JavaScript després afegiu el <filename
>cursor.js</filename
> al vostre script mitjançant <literal
>require</literal
>. </para>

<sect3 id="dev-scripting-api-prototypes">
<title
>Cursors i intervals</title>

<para
>Com la &kappname; és un editor de text, tota l'API per a la creació de scripts es basa en els cursors i els intervals sempre que sigui possible. Un Cursor és una simple <literal
>(line, column)</literal
> que representa una posició del text en el document. Un «Range» s'estén pel text des de la posició del cursor fins a una posició final del cursor. L'API s'explica amb detall en les següents seccions. </para>

<sect4 id="dev-scripting-api-cursors">
<title
>El prototip de «Cursor»</title>

<variablelist
><varlistentry>
<term
><synopsis
>Cursor();
</synopsis
></term>
<listitem
><para
>Constructor. Retorna un cursor a la posició <literal
>(0, 0)</literal
>.</para>
<para
>Exemple: <function
>var cursor = new Cursor();</function
> </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Cursor(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Constructor. Retorna un cursor a la posició (línia, columna). </para>
<para
>Exemple: <function
>var cursor = new Cursor(3, 42);</function
> </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Cursor(<parameter
>Cursor <replaceable
>altra</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>El constructor de còpia. Retorna una còpia del cursor <replaceable
>altra</replaceable
>. </para>
<para
>Exemple: <function
>var copy = new Cursor(altra);</function
> </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Cursor Cursor.clone();
</synopsis
></term>
<listitem
><para
>Retorna una còpia del cursor.</para>
<para
>Exemple: <function
>var clone = cursor.clone();</function
> </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Cursor.setPosition(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Estableix la posició del cursor a <replaceable
>línia</replaceable
> i <replaceable
>columna</replaceable
>.</para>
<para
>Des del: &kde; 4.11 </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Cursor.isValid();
</synopsis
></term>
<listitem
><para
>Comproveu si el cursor és vàlid. El cursor no és vàlid, si la línia i/o la columna s'estableix a <literal
>-1</literal
>. </para>
<para
>Exemple: <function
>var valid = cursor.isValid();</function
> </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Cursor Cursor.invalid();
</synopsis
></term>
<listitem
><para
>Retorna un cursor nou no vàlid situat a <literal
>(-1, -1)</literal
>. </para>
<para
>Exemple: <function
>var invalidCursor = cursor.invalid();</function
> </para
></listitem>
</varlistentry>

<varlistentry>
<term
><synopsis
>int Cursor.compareTo(<parameter
>Cursor <replaceable
>altra</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Compara aquest cursor al cursor <replaceable
>altra</replaceable
>. Retorna <itemizedlist>
<listitem
><para
><literal
>-1</literal
>, si el cursor està situat abans del cursor <replaceable
>altra</replaceable
>,</para
></listitem>
<listitem
><para
><literal
>0</literal
>, si tots dos cursors són iguals i</para
></listitem>
<listitem
><para
><literal
>+1</literal
>, si el cursor està situat després del cursor <replaceable
>altra</replaceable
>.</para
></listitem>
</itemizedlist>
</para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Cursor.equals(<parameter
>Cursor <replaceable
>altra</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si aquest cursor i el cursor <replaceable
>altra</replaceable
> són iguals, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String Cursor.toString();
</synopsis
></term>
<listitem
><para
>Retorna el cursor com una cadena de la forma <quote
><literal
>Cursor(line, column)</literal
></quote
>. </para
></listitem>
</varlistentry
></variablelist>

</sect4>


<sect4 id="dev-scripting-api-ranges">
<title
>El prototip «Range»</title>

<variablelist
><varlistentry>
<term
><synopsis
>Range();
</synopsis
></term>
<listitem
><para
>El constructor. Crida <literal
>new Range()</literal
> retornant un interval (0, 0) - (0, 0). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Range(<parameter
>Cursor <replaceable
>inici</replaceable
></parameter
>, <parameter
>Cursor <replaceable
>final</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>El constructor. Crida <literal
>new Range(<replaceable
>inici</replaceable
>, <replaceable
>final</replaceable
>)</literal
> retorna l'interval de (<replaceable
>inici</replaceable
>, <replaceable
>final</replaceable
>). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Range(<parameter
>int <replaceable
>líniaInici</replaceable
></parameter
>, <parameter
>int <replaceable
>columnaInici</replaceable
></parameter
>, <parameter
>int <replaceable
>líniaFinal</replaceable
></parameter
>, <parameter
>int <replaceable
>columnaFinal</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>El constructor. Crida <literal
>new Range(<replaceable
>líniaInici</replaceable
>, <replaceable
>columnaInici</replaceable
>, <replaceable
>líniaFinal</replaceable
>, <replaceable
>columnaFinal</replaceable
>)</literal
> retorna l'interval de (<replaceable
>líniaInici</replaceable
>, <replaceable
>columnaInici</replaceable
>) a (<replaceable
>líniaFinal</replaceable
>, <replaceable
>columnaFinal</replaceable
>). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Range(<parameter
>Range <replaceable
>altra</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>El constructor de còpia. Retorna una còpia de l'interval <replaceable
>altra</replaceable
>. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Range Range.clone();
</synopsis
></term>
<listitem
><para
>Retorna una còpia de l'interval. </para>
<para
>Exemple: <function
>var clone = range.clone();</function
> </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Range.isEmpty();
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si inici i final del cursor són iguals. </para>
<para
>Exemple: <function
>var empty = range.isEmpty();</function
> </para>
<para
>Des del: &kde; 4.11 </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Range.isValid();
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si inici i final del cursor són vàlids, en cas contrari retornarà <literal
>false</literal
> (fals). </para>
<para
>Exemple: <function
>var valid = range.isValid();</function
> </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Range Range.invalid();
</synopsis
></term>
<listitem
><para
>Retorna l'interval de (-1, -1) a (-1, -1). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Range.contains(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader) si aquest interval conté la posició de cursor, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Range.contains(<parameter
>Range <replaceable
>altra</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si aquest interval conté l'interval <replaceable
>altra</replaceable
>, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Range.containsColumn(<parameter
>int <replaceable
>columna</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si <replaceable
>columna</replaceable
> està en l'interval obert mig <literal
>[start.column, end.column)</literal
>, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Range.containsLine(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si <replaceable
>línia</replaceable
> està en l'interval obert mig <literal
>[start.line, end.line)</literal
>, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Range.overlaps(<parameter
>Range <replaceable
>altre</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si aquest interval i l'interval <replaceable
>altre</replaceable
> comparteixen una regió comuna, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Range.overlapsLine(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si <replaceable
>línia</replaceable
> està en l'interval <literal
>[start.line, end.line]</literal
>, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Range.overlapsColumn(<parameter
>int <replaceable
>columna</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si <replaceable
>columna</replaceable
> està en l'interval <literal
>[start.column, end.column]</literal
>, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Range.onSingleLine();
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si l'interval comença i finalitza a la mateixa línia, &ead; si <replaceable
>Línia.comença.interval == Línia.finalitza.interval</replaceable
>. </para>
<para
>Des del: &kde; 4.9 </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool Range.equals(<parameter
>Range <replaceable
>altra</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si aquest interval i l'interval <replaceable
>altra</replaceable
> són iguals, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String Range.toString();
</synopsis
></term>
<listitem
><para
>Retorna l'interval com una cadena de la forma «<literal
>Rang(Cursor(line, column), Cursor(line, column))</literal
>». </para
></listitem>
</varlistentry
></variablelist>

</sect4>
</sect3>

<sect3 id="dev-scripting-api-global">
<title
>Funcions globals</title>
<para
>Aquesta secció llista totes les funcions globals.</para>


<sect4 id="dev-scripting-api-includes">
<title
>Llegir i incloure fitxers</title>

<variablelist
><varlistentry>
<term
><synopsis
>String read(<parameter
>String <replaceable
>fitxer</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Cercarà el <replaceable
>fitxer</replaceable
> donat en relació al directori <literal
>katepart/script/files</literal
> i retorna el seu contingut com una cadena. </para
></listitem>
</varlistentry
></variablelist>

<variablelist
><varlistentry>
<term
><synopsis
>void require(<parameter
>String <replaceable
>fitxer</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Cercarà el <replaceable
>fitxer</replaceable
> donat en relació al directori <literal
>katepart/script/libraries</literal
> i l'avaluarà. <literal
>require</literal
> està internament protegit contra inclusions múltiples del mateix <replaceable
>fitxer</replaceable
>. </para>
<para
>Des del: &kde; 4.10 </para>
</listitem>
</varlistentry
></variablelist>

</sect4>

<sect4 id="dev-scripting-api-debug">
<title
>Depuració</title>

<variablelist
><varlistentry>
<term
><synopsis
>void debug(<parameter
>String <replaceable
>text</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Imprimeix <replaceable
>text</replaceable
> a <literal
>stdout</literal
> a la consola de llançament de l'aplicació. </para
></listitem>
</varlistentry
></variablelist>

</sect4>

<sect4 id="dev-scripting-api-i18n">
<title
>Traducció</title>

<para
>Per tal de donar suport a la completa localització, hi ha diverses funcions per convertir cadenes en els scripts, anomenades <literal
>i18n</literal
>, <literal
>i18nc</literal
>, <literal
>i18np</literal
> i <literal
>i18ncp</literal
>. Aquestes funcions es comporten exactament com les <ulink url="http://techbase.kde.org/Development/Tutorials/Localization/i18n"
>funcions de traducció del &kde;</ulink
>. </para>

<para
>Les funcions de traducció tradueixen les cadenes embolcallades a través del sistema de traducció del &kde; per a l'idioma utilitzat en l'aplicació. Les cadenes als scripts es desenvolupen a les fonts oficials de la &kappname; i s'extrauen de forma automàtica i traduïble. En altres paraules, com a desenvolupador de la &kappname; no haureu de preocupar-vos per l'extracció dels missatges i la traducció. Cal assenyalar però, que la traducció només funciona dins de la infraestructura del &kde;, &ead;, les cadenes noves als scripts de terceres parts desenvolupats fora del &kde; no seran traduïbles. Per tant, considereu en contribuir els vostres scripts al &kate;, de tal manera que sigui possible una traducció apropiada. </para>

<variablelist
><varlistentry>
<term
><synopsis
>void i18n(<parameter
>String <replaceable
>text</replaceable
></parameter
>, <replaceable
>arg1</replaceable
>...);
</synopsis
></term>
<listitem
><para
>Tradueix <replaceable
>text</replaceable
> a la llengua emprada per l'aplicació. Els arguments <replaceable
>arg1</replaceable
>..., són opcionals i s'utilitzen per a substituir els arguments <literal
>%1</literal
>, <literal
>%2</literal
>, &etc;</para
></listitem>
</varlistentry>

<varlistentry>
<term
><synopsis
>void i18nc(<parameter
>String <replaceable
>context</replaceable
></parameter
>, <parameter
>String <replaceable
>text</replaceable
></parameter
>, <replaceable
>arg1</replaceable
>...);
</synopsis
></term>
<listitem
><para
>Tradueix <replaceable
>text</replaceable
> a la llengua emprada per l'aplicació. A més, la cadena <replaceable
>context</replaceable
> és visible als traductors perquè puguin oferir una millor traducció. Els arguments <replaceable
>arg1</replaceable
>..., són opcionals i s'utilitzen per a substituir els arguments <literal
>%1</literal
>, <literal
>%2</literal
>, &etc;</para
></listitem>
</varlistentry>

<varlistentry>
<term
><synopsis
>void i18np(<parameter
>String <replaceable
>singular</replaceable
></parameter
>, <parameter
>String <replaceable
>plural</replaceable
></parameter
>, <parameter
>int <replaceable
>número</replaceable
></parameter
>, <replaceable
>arg1</replaceable
>...);
</synopsis
></term>
<listitem
><para
>Tradueix <replaceable
>singular</replaceable
> o <replaceable
>plural</replaceable
> a la llengua emprada per l'aplicació, en funció del <replaceable
>número</replaceable
> indicat. Els arguments <replaceable
>arg1</replaceable
>..., són opcionals i s'utilitzen per a substituir els arguments <literal
>%1</literal
>, <literal
>%2</literal
>, &etc;</para
></listitem>
</varlistentry>

<varlistentry>
<term
><synopsis
>void i18ncp(<parameter
>String <replaceable
>context</replaceable
></parameter
>, <parameter
>String <replaceable
>singular</replaceable
></parameter
>, <parameter
>String <replaceable
>plural</replaceable
></parameter
>, <parameter
>int <replaceable
>número</replaceable
></parameter
>, <replaceable
>arg1</replaceable
>...);
</synopsis
></term>
<listitem
><para
>Tradueix <replaceable
>singular</replaceable
> o <replaceable
>plural</replaceable
> a la llengua emprada per l'aplicació, en funció del <replaceable
>número</replaceable
> indicat. A més, la cadena <replaceable
>context</replaceable
> és visible als traductors perquè puguin oferir una millor traducció. Els arguments <replaceable
>arg1</replaceable
>..., són opcionals i s'utilitzen per a substituir els arguments <literal
>%1</literal
>, <literal
>%2</literal
>, &etc;</para
></listitem>
</varlistentry
></variablelist>

</sect4>
</sect3>

<sect3 id="dev-scripting-api-view">
<title
>L'API de «View»</title>
<para
>Cada vegada que s'executa un script, si hi ha una variable global <quote
><literal
>view</literal
></quote
> que representa la vista actual de l'editor actiu. La següent és una llista de totes les funcions «View» disponibles. <variablelist
><varlistentry>
<term
><synopsis
><function
>Cursor view.cursorPosition()</function
>
</synopsis
></term>
<listitem
><para
>Retorna la posició actual del cursor en la vista.</para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>void view.setCursorPosition(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
void view.setCursorPosition(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Estableix la posició actual del cursor a (línia, columna) o el cursor indicat. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Cursor view.virtualCursorPosition();
</synopsis
></term>
<listitem
><para
>Retorna la posició del cursor virtual amb cada tabulació comptant la corresponent quantitat d'espais depenent de l'amplada de la tabulació actual. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>void view.setVirtualCursorPosition(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>column</replaceable
></parameter
>);
void view.setVirtualCursorPosition(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Estableix la posició actual del cursor virtual (línia, columna) o el cursor indicat. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String view.selectedText();
</synopsis
></term>
<listitem
><para
>Retorna el text seleccionat. Si no hi ha text seleccionat, la cadena retornada estarà buida. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool view.hasSelection();
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si la vista conté el text seleccionat, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Range view.selection();
</synopsis
></term>
<listitem
><para
>Retorna l'interval de text seleccionat. L'interval retornat no serà vàlid si no hi ha text seleccionat. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>void view.setSelection(<parameter
>Range <replaceable
>rang</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Estableix el text seleccionat a l'interval indicat. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>void view.removeSelectedText();
</synopsis
></term>
<listitem
><para
>Elimina el text seleccionat. Si la vista no té cap text seleccionat, no farà res. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>void view.selectAll();
</synopsis
></term>
<listitem
><para
>Selecciona el text sencer en el document. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>void view.clearSelection();
</synopsis
></term>
<listitem
><para
>Neteja la selecció de text sense eliminar-lo. </para
></listitem>
</varlistentry
></variablelist>
</para>
</sect3>

<sect3 id="dev-scripting-api-document">
<title
>L'API de «Document»</title>
<para
>Cada vegada que s'executa un script, si hi ha una variable global <quote
><literal
>document</literal
></quote
> que representa el document actiu actual. La següent és una llista de totes les funcions de «Document» disponibles. <variablelist
><varlistentry>
<term
><synopsis
>String document.fileName();
</synopsis
></term>
<listitem
><para
>Retorna el nom de fitxer del document o una cadena buida per a la memòria cau del text sense desar. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.url();
</synopsis
></term>
<listitem
><para
>Retorna l'URL complet del document o una cadena buida per a la memòria cau del text sense desar. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.mimeType();
</synopsis
></term>
<listitem
><para
>Retorna el tipus MIME del document o el tipus MIME <literal
>application/octet-stream</literal
> si no es pot trobar un tipus MIME adequat. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.encoding();
</synopsis
></term>
<listitem
><para
>Retorna la codificació emprada actualment per a desar el fitxer. </para
></listitem>
</varlistentry>

<varlistentry>
<term
><synopsis
>String document.highlightingMode();
</synopsis
></term>
<listitem
><para
>Retorna el mode de ressaltat global emprat per a tot el document. </para
></listitem>
</varlistentry>

<varlistentry>
<term
><synopsis
>String document.highlightingModeAt(<parameter
>Cursor <replaceable
>pos</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna el mode de ressaltat emprat a la posició indicada en el document. </para
></listitem>
</varlistentry>

<varlistentry>
<term
><synopsis
>Array document.embeddedHighlightingModes();
</synopsis
></term>
<listitem
><para
>Retorna una cadena de modes de ressaltat inclosos en aquest document. </para
></listitem>
</varlistentry>

<varlistentry>
<term
><synopsis
>bool document.isModified();
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si el document conté canvis sense desar (modificat), en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.text();
</synopsis
></term>
<listitem
><para
>Retorna el contingut complet del document en una cadena de text única. Els salts de línia estan marcats amb el caràcter de nova línia <quote
><literal
>\n</literal
></quote
>. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.text(<parameter
>int <replaceable
>desDeLínia</replaceable
></parameter
>, <parameter
>int <replaceable
>desDeColumna</replaceable
></parameter
>, <parameter
>int <replaceable
>alaLínia</replaceable
></parameter
>, <parameter
>int <replaceable
>alaColumna</replaceable
></parameter
>);
String document.text(<parameter
>Cursor <replaceable
>desDe</replaceable
></parameter
>, <parameter
>Cursor <replaceable
>a</replaceable
></parameter
>);
String document.text(<parameter
>Range <replaceable
>rang</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna el text en l'interval donat. Es recomana utilitzar el cursor i la versió basada en l'interval per a una millor lectura del codi font. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.line(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna la línia de text donada com a cadena. La cadena estarà buida si la línia demanada està fora de l'interval. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.wordAt(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
String document.wordAt(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna la paraula a la posició del cursor donada. </para
></listitem>
</varlistentry>


<varlistentry>
<term>
<synopsis
>Range document.wordRangeAt(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
Range document.wordRangeAt(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis>
</term>
<listitem
><para
>Retorna l'interval de la paraula a la posició del cursor donada. L'interval retornat no serà vàlid (vegeu Range.isValid()), si la posició del text és després del final d'una línia. Si no hi ha paraula al cursor donat, es retornarà un interval buit. </para>
<para
>Des del: &kde; 4.9 </para>
</listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.charAt(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
String document.charAt(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna el caràcter a la posició del cursor donada. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.firstChar(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna el primer caràcter en la <replaceable
>línia</replaceable
> donada que no és un espai en blanc. El primer caràcter és a la columna 0. Si la línia està buida o només conté espais en blanc, la cadena retornada estarà buida. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.lastChar(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna l'últim caràcter de la <replaceable
>línia</replaceable
> donada que no és un espai en blanc. Si la línia està buida o només conté espais en blanc, la cadena retornada estarà buida. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isSpace(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
bool document.isSpace(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si el caràcter a la posició del cursor donada és un espai en blanc, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.matchesAt(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>, <parameter
>String <replaceable
>text</replaceable
></parameter
>);
bool document.matchesAt(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>, <parameter
>String <replaceable
>text</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si el <replaceable
>text</replaceable
> donat coincideix a la posició del cursor corresponent, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.startsWith(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>String <replaceable
>text</replaceable
></parameter
>, <parameter
>bool <replaceable
>skipWhiteSpaces</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si la línia comença amb <replaceable
>text</replaceable
>, en cas contrari retornarà <literal
>false</literal
> (fals). L'argument <replaceable
>skipWhiteSpaces</replaceable
> controla si s'han d'ometre els espais en blanc al davant. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.endsWith(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>String <replaceable
>text</replaceable
></parameter
>, <parameter
>bool <replaceable
>skipWhiteSpaces</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si la línia acaba amb <replaceable
>text</replaceable
>, en cas contrari retornarà <literal
>false</literal
> (fals). L'argument <replaceable
>skipWhiteSpaces</replaceable
> controla si s'han d'ometre els espais en blanc finals. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.setText(<parameter
>String <replaceable
>text</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Estableix el text a tot el document. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.clear();
</synopsis
></term>
<listitem
><para
>Elimina tot el text en el document. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.truncate(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
bool document.truncate(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Trunca la línia donada a la columna o la posició donada del cursor. Retorna <literal
>true</literal
> (vertader) en cas d'èxit, o <literal
>false</literal
> (fals) si la línia donada no forma part de l'interval del document. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.insertText(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>, <parameter
>String <replaceable
>text</replaceable
></parameter
>);
bool document.insertText(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>, <parameter
>String <replaceable
>text</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Insereix el <replaceable
>text</replaceable
> a la posició donada del cursor. Retorna <literal
>true</literal
> (vertader) en cas d'èxit, o <literal
>false</literal
> (fals), si el document està en el mode de només lectura. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.removeText(<parameter
>int <replaceable
>desDeLínia</replaceable
></parameter
>, <parameter
>int <replaceable
>desDeColumna</replaceable
></parameter
>, <parameter
>int <replaceable
>alaLínia</replaceable
></parameter
>, <parameter
>int <replaceable
>alaColumna</replaceable
></parameter
>);
bool document.removeText(<parameter
>Cursor <replaceable
>desDe</replaceable
></parameter
>, <parameter
>Cursor <replaceable
>a</replaceable
></parameter
>);
bool document.removeText(<parameter
>Range <replaceable
>rang</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Elimina el text dins de l'interval donat. Retorna <literal
>true</literal
> (vertader) en cas d'èxit, o <literal
>false</literal
> (fals), si el document està en el mode de només lectura. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.insertLine(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>String <replaceable
>text</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Insereix text en la línia donada. Retorna <literal
>true</literal
> (vertader) en cas d'èxit, o <literal
>false</literal
> (fals), si el document està en el mode de només lectura o la línia no està en l'interval del document. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.removeLine(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Elimina la línia de text donada. Retorna <literal
>true</literal
> (vertader) en cas d'èxit, o <literal
>false</literal
> (fals), si el document està en el mode de només lectura o la línia no està en l'interval del document. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.wrapLine(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
bool document.wrapLine(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Ajusta la línia a la posició del cursor donada. Retorna <literal
>true</literal
> (vertader) en cas d'èxit, o <literal
>false</literal
> (fals), &pex; si la línia &lt; 0. </para>
<para
>Des del: &kde; 4.9 </para>
</listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>void document.joinLines(<parameter
>int <replaceable
>iniciLínia</replaceable
></parameter
>, <parameter
>int <replaceable
>finalLínia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>S'uneix a les línies de <replaceable
>iniciLínia</replaceable
> a <replaceable
>finalLínia</replaceable
>. Dues línies de text successives sempre estan separades per un espai. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.lines();
</synopsis
></term>
<listitem
><para
>Retorna el nombre de línies en el document. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isLineModified(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si la <replaceable
>línia</replaceable
> actual conté dades sense desar. </para>
<para
>Des del: &kde; 5.0 </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isLineSaved(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si la <replaceable
>línia</replaceable
> ha canviat, però el document ha estat desat. Per tant, la línia actual no conté cap dada sense desar. </para>
<para
>Des del: &kde; 5.0 </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isLineTouched(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si la <replaceable
>línia</replaceable
> actual conté dades sense desar o que s'han canviat abans. </para>
<para
>Des del: &kde; 5.0 </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.findTouchedLine(<parameter
>int <replaceable
>iniciLínia</replaceable
></parameter
>, <parameter
>bool <replaceable
>avall</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Cerca la següent línia tocada començant per la <replaceable
>línia</replaceable
>. La cerca es realitza amunt o avall depenent de la direcció especificada a <replaceable
>avall</replaceable
>. </para>
<para
>Des del: &kde; 5.0 </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.length();
</synopsis
></term>
<listitem
><para
>Retorna el nombre de caràcters en el document. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.lineLength(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna la longitud de la <replaceable
>línia</replaceable
>. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>void document.editBegin();
</synopsis
></term>
<listitem
><para
>Comença un grup d'edició per agrupar desfer/refer. Assegureu-vos de cridar sempre <function
>editEnd()</function
> tan aviat com crideu <function
>editBegin()</function
>. La crida <function
>editBegin()</function
> utilitza internament un comptador de referència, &ead;, aquesta crida es pot imbricar. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>void document.editEnd();
</synopsis
></term>
<listitem
><para
>Finalitza un grup d'edició. L'última crida de <function
>editEnd()</function
> (&ead;, una per a la primera crida de <function
>editBegin()</function
>) finalitza el pas d'edició. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.firstColumn(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna la primera columna que no està en blanc en la <replaceable
>línia</replaceable
> donada. Si només hi ha espais en blanc a la línia, el valor retornat serà <literal
>-1</literal
>. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.lastColumn(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna la darrera columna que no està en blanc en la <replaceable
>línia</replaceable
> donada. Si només hi ha espais en blanc a la línia, el valor retornat serà <literal
>-1</literal
>. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.prevNonSpaceColumn(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
int document.prevNonSpaceColumn(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna la columna no buida que conté un caràcter no en blanc a partir de la posició donada del cursor i cercant cap enrere. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.nextNonSpaceColumn(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
int document.nextNonSpaceColumn(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna la columna no buida que conté un caràcter no en blanc a partir de la posició donada del cursor i cercant cap endavant. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.prevNonEmptyLine(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna la línia següent no buida que conté caràcters no en blanc a la cerca cap enrere. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.nextNonEmptyLine(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna la línia següent no buida que conté caràcters no en blanc a la cerca cap endavant. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isInWord(<parameter
>String <replaceable
>caràcter</replaceable
></parameter
>, <parameter
>int <replaceable
>atribut</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si el <replaceable
>caràcter</replaceable
> donat amb l'<replaceable
>atribut</replaceable
> donat pot formar part d'una paraula, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.canBreakAt(<parameter
>String <replaceable
>caràcter</replaceable
></parameter
>, <parameter
>int <replaceable
>atribut</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si el <replaceable
>caràcter</replaceable
> donat amb l'<replaceable
>atribut</replaceable
> donat és adequat com a embolcall d'una línia, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.canComment(<parameter
>int <replaceable
>iniciAtribut</replaceable
></parameter
>, <parameter
>int <replaceable
>finalAtribut</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si un interval inicial i final amb els atributs donats es presten a ser descomentats, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.commentMarker(<parameter
>int <replaceable
>atribut</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna el marcador de comentari per als comentaris de línia única per a un <replaceable
>atribut</replaceable
> donat. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.commentStart(<parameter
>int <replaceable
>atribut</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna el marcador de comentari per al començament de comentaris de múltiples línies per a un <replaceable
>atribut</replaceable
> donat. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.commentEnd(<parameter
>int <replaceable
>atribut</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna el marcador de comentari per al final de comentaris de múltiples línies per a un <replaceable
>atribut</replaceable
> donat. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Range document.documentRange();
</synopsis
></term>
<listitem
><para
>Retorna un interval que abasta tot el document. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Cursor documentEnd();
</synopsis
></term>
<listitem
><para
>Retorna un cursor situat a l'última columna de l'última línia al document. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool isValidTextPosition(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
bool isValidTextPosition(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si la posició indicada del cursor està situada a una posició vàlida del text. Una posició de text només és vàlida si es localitza al començament, al mig o al final d'una línia vàlida. A més, una posició de text no serà vàlida si es troba en un substitut Unicode. </para
><para
>Des del: &kde; 5.0 </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.attribute(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
int document.attribute(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna l'atribut a la posició del cursor donada. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isAttribute(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>, <parameter
>int <replaceable
>atribut</replaceable
></parameter
>);
bool document.isAttribute(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>, <parameter
>int <replaceable
>atribut</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si l'atribut a la posició del cursor és igual que l'<replaceable
>atribut</replaceable
>, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.attributeName(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
String document.attributeName(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna el nom de l'atribut com a text llegible. Això equival al nom <literal
>itemData</literal
> en els fitxers de ressaltat de la sintaxi. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isAttributeName(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>, <parameter
>String <replaceable
>nom</replaceable
></parameter
>);
bool document.isAttributeName(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>, <parameter
>String <replaceable
>nom</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si el nom de l'atribut en una posició determinada del cursor coincideix amb el <replaceable
>nom</replaceable
> donat, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>String document.variable(<parameter
>String <replaceable
>clau</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna el valor de la variable de document demanada <replaceable
>clau</replaceable
>. Si la variable de document no existeix, el valor retornat serà una cadena buida. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>void document.setVariable(<parameter
>String <replaceable
>clau</replaceable
></parameter
>, <parameter
>String <replaceable
>valor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Estableix el valor de la variable de document demanada <replaceable
>clau</replaceable
>. </para>
<para
>Vegeu també: <link linkend="config-variables"
>variables de document del Kate</link
> </para>
<para
>Des del: &kde; 4.8 </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.firstVirtualColumn(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna la columna virtual del primer caràcter que no està en blanc a la línia donada o <literal
>-1</literal
>, si la línia està buida o només conté caràcters d'espai en blanc. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.lastVirtualColumn(<parameter
>int <replaceable
>línia</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna la columna virtual de l'últim caràcter que no està en blanc a la línia donada o <literal
>-1</literal
>, si la línia està buida o només conté caràcters d'espai en blanc. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.toVirtualColumn(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
int document.toVirtualColumn(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
Cursor document.toVirtualCursor(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Converteix la posició <quote
>real</quote
> donada del cursor a una posició virtual del cursor, d'altra manera retorna un «int» o un objecte «Cursor». </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.fromVirtualColumn(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>virtualColumna</replaceable
></parameter
>);
int document.fromVirtualColumn(<parameter
>Cursor <replaceable
>virtualCursor</replaceable
></parameter
>);
Cursor document.fromVirtualCursor(<parameter
>Cursor <replaceable
>virtualCursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Converteix la posició virtual donada del cursor a una posició <quote
>real</quote
> del cursor, d'altra manera retorna un «int» o un objecte «Cursor». </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Cursor document.anchor(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>, <parameter
>Char <replaceable
>caràcter</replaceable
></parameter
>);
Cursor document.anchor(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>, <parameter
>Char <replaceable
>caràcter</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Cerca enrere pel caràcter donat a partir del cursor donat. Com a exemple, si es passa «(» com a caràcter, aquesta funció retornarà la posició de l'obertura «(». Això compta la referència, &ead;, els altres «(...)» seran ignorats. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>Cursor document.rfind(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>, <parameter
>String <replaceable
>text</replaceable
></parameter
>, <parameter
>int <replaceable
>atribut</replaceable
> = -1</parameter
>);
Cursor document.rfind(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>, <parameter
>String <replaceable
>text</replaceable
></parameter
>, <parameter
>int <replaceable
>atribut</replaceable
> = -1</parameter
>);
</synopsis
></term>
<listitem
><para
>Cerca cap enrere el text donat amb l'<replaceable
>atribut</replaceable
> adequat. L'argument <replaceable
>atribut</replaceable
> s'ignorarà si s'estableix a <literal
>-1</literal
>. El cursor retornat no serà vàlid, si el text no s'ha pogut trobar. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>int document.defStyleNum(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
int document.defStyleNum(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna l'estil per omissió utilitzat a la posició donada del cursor. </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isCode(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
bool document.isCode(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si l'atribut a la posició donada del cursor no és igual per a tots els següents estils: <literal
>dsComment</literal
>, <literal
>dsString</literal
>, <literal
>dsRegionMarker</literal
>, <literal
>dsChar</literal
>, <literal
>dsOthers</literal
>. </para
></listitem>
</varlistentry>



<varlistentry>
<term
><synopsis
>bool document.isComment(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
bool document.isComment(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si l'atribut del caràcter a la posició del cursor és <literal
>dsComment</literal
>, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isString(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
bool document.isString(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si l'atribut del caràcter a la posició del cursor és <literal
>dsString</literal
>, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isRegionMarker(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
bool document.isRegionMarker(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si l'atribut del caràcter a la posició del cursor és <literal
>dsRegionMarker</literal
>, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isChar(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
bool document.isChar(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si l'atribut del caràcter a la posició del cursor és <literal
>dsChar</literal
>, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry>


<varlistentry>
<term
><synopsis
>bool document.isOthers(<parameter
>int <replaceable
>línia</replaceable
></parameter
>, <parameter
>int <replaceable
>columna</replaceable
></parameter
>);
bool document.isOthers(<parameter
>Cursor <replaceable
>cursor</replaceable
></parameter
>);
</synopsis
></term>
<listitem
><para
>Retorna <literal
>true</literal
> (vertader), si l'atribut del caràcter a la posició del cursor és <literal
>dsOthers</literal
>, en cas contrari retornarà <literal
>false</literal
> (fals). </para
></listitem>
</varlistentry
></variablelist>
</para>

</sect3>
</sect2>

</sect1>

</chapter>
